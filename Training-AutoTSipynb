{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "AutoTS-Training.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyM1uqXBlgb2LuDM3uLrIzSb",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JoaquinGonzalezSimon/Data_science_and_ML_from_Medium/blob/main/AutoTS_Training.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# AutoTS training\n",
        "https://thecleverprogrammer.com/2021/04/19/autots-in-python-tutorial/"
      ],
      "metadata": {
        "id": "lsPo88rRMMfK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pip install yfinance"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U4RO36hVMbuh",
        "outputId": "db712a7b-db6b-4eaf-e4c2-6cec0ed35118"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting yfinance\n",
            "  Downloading yfinance-0.1.70-py2.py3-none-any.whl (26 kB)\n",
            "Requirement already satisfied: numpy>=1.15 in /usr/local/lib/python3.7/dist-packages (from yfinance) (1.21.6)\n",
            "Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from yfinance) (0.0.10)\n",
            "Collecting requests>=2.26\n",
            "  Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n",
            "\u001b[K     |████████████████████████████████| 63 kB 143 kB/s \n",
            "\u001b[?25hCollecting lxml>=4.5.1\n",
            "  Downloading lxml-4.9.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.4 MB)\n",
            "\u001b[K     |████████████████████████████████| 6.4 MB 11.6 MB/s \n",
            "\u001b[?25hRequirement already satisfied: pandas>=0.24.0 in /usr/local/lib/python3.7/dist-packages (from yfinance) (1.3.5)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->yfinance) (2022.1)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->yfinance) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.24.0->yfinance) (1.15.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (2022.5.18.1)\n",
            "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (2.0.12)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (2.10)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (1.24.3)\n",
            "Installing collected packages: requests, lxml, yfinance\n",
            "  Attempting uninstall: requests\n",
            "    Found existing installation: requests 2.23.0\n",
            "    Uninstalling requests-2.23.0:\n",
            "      Successfully uninstalled requests-2.23.0\n",
            "  Attempting uninstall: lxml\n",
            "    Found existing installation: lxml 4.2.6\n",
            "    Uninstalling lxml-4.2.6:\n",
            "      Successfully uninstalled lxml-4.2.6\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "google-colab 1.0.0 requires requests~=2.23.0, but you have requests 2.27.1 which is incompatible.\n",
            "datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible.\u001b[0m\n",
            "Successfully installed lxml-4.9.0 requests-2.27.1 yfinance-0.1.70\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import yfinance as yf"
      ],
      "metadata": {
        "id": "VWZ35uWHMSHp"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import datetime\n",
        "from datetime import date, timedelta"
      ],
      "metadata": {
        "id": "MEE4VN48MnZ6"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "end_date = date.today().strftime('%Y-%m-%d')\n",
        "end_date"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "WnXjJWZ5Mh7Z",
        "outputId": "c1b4e8f7-8cf9-4792-cc60-7800efac323b"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'2022-06-02'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "start_date = date.today() - timedelta(days=730)\n",
        "start_date = start_date.strftime('%Y-%m-%d')\n",
        "start_date"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "f9ka8Vc8MwiJ",
        "outputId": "0361ced6-8115-4116-8522-69b6acc64e7f"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'2020-06-02'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = yf.download('AAPL', start=start_date, end=end_date, progress=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2a9LaNo8M95T",
        "outputId": "388e344f-429a-4ea6-f715-5a53873560ba"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\r[*********************100%***********************]  1 of 1 completed\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "mkf_WbEjNKKt",
        "outputId": "75e964a1-a22f-4b10-e5ef-b347d52a31b3"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 Open       High        Low      Close  Adj Close     Volume\n",
              "Date                                                                        \n",
              "2020-06-02  80.187500  80.860001  79.732498  80.834999  79.837837   87642800\n",
              "2020-06-03  81.165001  81.550003  80.574997  81.279999  80.277344  104491200\n",
              "2020-06-04  81.097504  81.404999  80.195000  80.580002  79.585991   87560400\n",
              "2020-06-05  80.837502  82.937500  80.807503  82.875000  81.852669  137250400\n",
              "2020-06-08  82.562500  83.400002  81.830002  83.364998  82.336624   95654400"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-282f20c6-dccb-4991-a5d6-d16a0f5a48d8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Adj Close</th>\n",
              "      <th>Volume</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2020-06-02</th>\n",
              "      <td>80.187500</td>\n",
              "      <td>80.860001</td>\n",
              "      <td>79.732498</td>\n",
              "      <td>80.834999</td>\n",
              "      <td>79.837837</td>\n",
              "      <td>87642800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-03</th>\n",
              "      <td>81.165001</td>\n",
              "      <td>81.550003</td>\n",
              "      <td>80.574997</td>\n",
              "      <td>81.279999</td>\n",
              "      <td>80.277344</td>\n",
              "      <td>104491200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-04</th>\n",
              "      <td>81.097504</td>\n",
              "      <td>81.404999</td>\n",
              "      <td>80.195000</td>\n",
              "      <td>80.580002</td>\n",
              "      <td>79.585991</td>\n",
              "      <td>87560400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-05</th>\n",
              "      <td>80.837502</td>\n",
              "      <td>82.937500</td>\n",
              "      <td>80.807503</td>\n",
              "      <td>82.875000</td>\n",
              "      <td>81.852669</td>\n",
              "      <td>137250400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-08</th>\n",
              "      <td>82.562500</td>\n",
              "      <td>83.400002</td>\n",
              "      <td>81.830002</td>\n",
              "      <td>83.364998</td>\n",
              "      <td>82.336624</td>\n",
              "      <td>95654400</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-282f20c6-dccb-4991-a5d6-d16a0f5a48d8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-282f20c6-dccb-4991-a5d6-d16a0f5a48d8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-282f20c6-dccb-4991-a5d6-d16a0f5a48d8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['Date'] = data.index\n",
        "data.reset_index(drop=True, inplace=True)\n",
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "QPbl5FuPNXTb",
        "outputId": "add6fa73-de03-4812-a018-de7cddebd6cf"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Open       High        Low      Close  Adj Close     Volume       Date\n",
              "0  80.187500  80.860001  79.732498  80.834999  79.837837   87642800 2020-06-02\n",
              "1  81.165001  81.550003  80.574997  81.279999  80.277344  104491200 2020-06-03\n",
              "2  81.097504  81.404999  80.195000  80.580002  79.585991   87560400 2020-06-04\n",
              "3  80.837502  82.937500  80.807503  82.875000  81.852669  137250400 2020-06-05\n",
              "4  82.562500  83.400002  81.830002  83.364998  82.336624   95654400 2020-06-08"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0f4f8c56-f77a-4420-8222-defd31ab643a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Adj Close</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>80.187500</td>\n",
              "      <td>80.860001</td>\n",
              "      <td>79.732498</td>\n",
              "      <td>80.834999</td>\n",
              "      <td>79.837837</td>\n",
              "      <td>87642800</td>\n",
              "      <td>2020-06-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>81.165001</td>\n",
              "      <td>81.550003</td>\n",
              "      <td>80.574997</td>\n",
              "      <td>81.279999</td>\n",
              "      <td>80.277344</td>\n",
              "      <td>104491200</td>\n",
              "      <td>2020-06-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>81.097504</td>\n",
              "      <td>81.404999</td>\n",
              "      <td>80.195000</td>\n",
              "      <td>80.580002</td>\n",
              "      <td>79.585991</td>\n",
              "      <td>87560400</td>\n",
              "      <td>2020-06-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>80.837502</td>\n",
              "      <td>82.937500</td>\n",
              "      <td>80.807503</td>\n",
              "      <td>82.875000</td>\n",
              "      <td>81.852669</td>\n",
              "      <td>137250400</td>\n",
              "      <td>2020-06-05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>82.562500</td>\n",
              "      <td>83.400002</td>\n",
              "      <td>81.830002</td>\n",
              "      <td>83.364998</td>\n",
              "      <td>82.336624</td>\n",
              "      <td>95654400</td>\n",
              "      <td>2020-06-08</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f4f8c56-f77a-4420-8222-defd31ab643a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0f4f8c56-f77a-4420-8222-defd31ab643a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0f4f8c56-f77a-4420-8222-defd31ab643a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=data.copy()\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "xAbbFLORNgvT",
        "outputId": "8c60b732-5c12-4c3a-f87c-4b3533cacc3c"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Open       High        Low      Close  Adj Close     Volume       Date\n",
              "0  80.187500  80.860001  79.732498  80.834999  79.837837   87642800 2020-06-02\n",
              "1  81.165001  81.550003  80.574997  81.279999  80.277344  104491200 2020-06-03\n",
              "2  81.097504  81.404999  80.195000  80.580002  79.585991   87560400 2020-06-04\n",
              "3  80.837502  82.937500  80.807503  82.875000  81.852669  137250400 2020-06-05\n",
              "4  82.562500  83.400002  81.830002  83.364998  82.336624   95654400 2020-06-08"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b2078b9b-22d9-4848-b365-83fdc89b37a7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Adj Close</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>80.187500</td>\n",
              "      <td>80.860001</td>\n",
              "      <td>79.732498</td>\n",
              "      <td>80.834999</td>\n",
              "      <td>79.837837</td>\n",
              "      <td>87642800</td>\n",
              "      <td>2020-06-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>81.165001</td>\n",
              "      <td>81.550003</td>\n",
              "      <td>80.574997</td>\n",
              "      <td>81.279999</td>\n",
              "      <td>80.277344</td>\n",
              "      <td>104491200</td>\n",
              "      <td>2020-06-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>81.097504</td>\n",
              "      <td>81.404999</td>\n",
              "      <td>80.195000</td>\n",
              "      <td>80.580002</td>\n",
              "      <td>79.585991</td>\n",
              "      <td>87560400</td>\n",
              "      <td>2020-06-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>80.837502</td>\n",
              "      <td>82.937500</td>\n",
              "      <td>80.807503</td>\n",
              "      <td>82.875000</td>\n",
              "      <td>81.852669</td>\n",
              "      <td>137250400</td>\n",
              "      <td>2020-06-05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>82.562500</td>\n",
              "      <td>83.400002</td>\n",
              "      <td>81.830002</td>\n",
              "      <td>83.364998</td>\n",
              "      <td>82.336624</td>\n",
              "      <td>95654400</td>\n",
              "      <td>2020-06-08</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2078b9b-22d9-4848-b365-83fdc89b37a7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b2078b9b-22d9-4848-b365-83fdc89b37a7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b2078b9b-22d9-4848-b365-83fdc89b37a7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=df[['Date', 'Close']]\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "6PwumWlzNr0k",
        "outputId": "e439ae71-38ee-4ced-a714-13c4d7e1a337"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Date      Close\n",
              "0 2020-06-02  80.834999\n",
              "1 2020-06-03  81.279999\n",
              "2 2020-06-04  80.580002\n",
              "3 2020-06-05  82.875000\n",
              "4 2020-06-08  83.364998"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-84d9a161-39ea-4f0f-93b9-ce494f1367df\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Close</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2020-06-02</td>\n",
              "      <td>80.834999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2020-06-03</td>\n",
              "      <td>81.279999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2020-06-04</td>\n",
              "      <td>80.580002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2020-06-05</td>\n",
              "      <td>82.875000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020-06-08</td>\n",
              "      <td>83.364998</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84d9a161-39ea-4f0f-93b9-ce494f1367df')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-84d9a161-39ea-4f0f-93b9-ce494f1367df button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-84d9a161-39ea-4f0f-93b9-ce494f1367df');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e55KspU_Nw37",
        "outputId": "957bc0b6-33e0-4e16-c492-2e4ed6d0bc7f"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 505 entries, 0 to 504\n",
            "Data columns (total 2 columns):\n",
            " #   Column  Non-Null Count  Dtype         \n",
            "---  ------  --------------  -----         \n",
            " 0   Date    505 non-null    datetime64[ns]\n",
            " 1   Close   505 non-null    float64       \n",
            "dtypes: datetime64[ns](1), float64(1)\n",
            "memory usage: 8.0 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.Close.plot(figsize=(15,10), \n",
        "                title='Apple Stock Price', fontsize=20, label='Close Price')\n",
        "plt.legend()\n",
        "plt.grid()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "HwdMldIlNzJp",
        "outputId": "070430b0-2022-4ae4-90b8-532719fceeb9"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x720 with 1 Axes>"
            ],
            "image/png": "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7drFzp07l3sZsgrpsyW1os+W1Io+W1Ir+mxJray0z5Yx5tBU96sFVERERERE5DShACgiIiIiInKaUAAUERERERE5TazKPYAiIiIiIrK88vk8R48eJZPJLPdSFkVzczMvvPDCci9jknA4zIYNGwgEAlVdrwAoIiIiIiKL7ujRo8RiMTZt2oQxZrmXs2CJRIJYLLbcyxjHWkt/fz9Hjx5l8+bNVT1HLaAiIiIiIrLoMpkM7e3tqyL81StjDO3t7XOqsioAioiIiIhITSj81d5cv8cKgCIiIiIiIqcJBUAREREREVmVenp6ePvb385ZZ53FZZddxute9zr27NnDwYMH2b59e83ed+fOnZx77rns2LGDV77ylbz44otTXvfe976X559/vmbrmIoCoIiIiIiIrDrWWt70pjexc+dO9u3bx2OPPcbnPvc5Tp48uSTvf+edd/LUU09xyy238IlPfGLS48VikX/6p39i27ZtS7IejwKgiIiIiIisOvfeey+BQIAPfvCD5ft27NjBNddcM+66TCbDu9/9bi688EIuueQS7r33XgCee+45rrzySi6++GIuuugi9u7dC8Add9xRvv8DH/gAxWJxxnVce+215edGo1E+/vGPs2PHDn75y1+yc+dOHn30UQB+/OMfc+mll7Jjxw6uv/56AJLJJO95z3u48sorueSSS/je97634O+LxkCIiIiIiEhN/fkPnuP54yOL+prb1sX59BsumPbxZ599lssuu2zW1/nSl76EMYZnnnmG3bt3c8MNN7Bnzx6+8pWv8LGPfYybb76ZXC7H0NAQL7zwAt/85jd58MEHCQQCfOhDH+LOO+/kXe9617Sv/4Mf/IALL7wQcALdVVddxRe/+MVx1/T29vK+972P++67j82bNzMwMADAZz/7Wa677jq+9rWvMTQ0xJVXXsmrXvUqIpFINd+iKSkAioiIiIjIaeuBBx7gIx/5CADnnXceZ555Jnv27OHlL385n/3sZzl69ChvfvObWbNmDffccw+PPfYYV1xxBQDpdJqurq4pX/fmm2+msbGRTZs2ceuttwLg8/n47d/+7UnXPvzww1x77bXlWX5tbW0A/PSnP+X73/8+X/jCFwCnWnn48GHOP//8eX+9CoAiIiIiIlJTM1XqauWCCy7g29/+9ryf/853vpOrrrqKH/7wh7zuda/jr//6r7HWcsst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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Import AutoTS library"
      ],
      "metadata": {
        "id": "FBs2H5ASOZ3g"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install autots"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xb4EifCXOftW",
        "outputId": "88370138-284e-43f8-d13d-d92cb8cc90dc"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting autots\n",
            "  Downloading AutoTS-0.4.1-py3-none-any.whl (470 kB)\n",
            "\u001b[K     |████████████████████████████████| 470 kB 5.3 MB/s \n",
            "\u001b[?25hRequirement already satisfied: scikit-learn>=0.20.* in /usr/local/lib/python3.7/dist-packages (from autots) (1.0.2)\n",
            "Requirement already satisfied: statsmodels>=0.10.* in /usr/local/lib/python3.7/dist-packages (from autots) (0.10.2)\n",
            "Requirement already satisfied: numpy>=1.14.6 in /usr/local/lib/python3.7/dist-packages (from autots) (1.21.6)\n",
            "Requirement already satisfied: pandas>=0.25.* in /usr/local/lib/python3.7/dist-packages (from autots) (1.3.5)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.25.*->autots) (2022.1)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.25.*->autots) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.25.*->autots) (1.15.0)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.20.*->autots) (1.1.0)\n",
            "Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.20.*->autots) (1.4.1)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.20.*->autots) (3.1.0)\n",
            "Requirement already satisfied: patsy>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from statsmodels>=0.10.*->autots) (0.5.2)\n",
            "Installing collected packages: autots\n",
            "Successfully installed autots-0.4.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from autots import AutoTS"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TKju5mT9OHCe",
        "outputId": "2ea8ecf7-a3d1-4f5d-b187-b5b7a0be79eb"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n",
            "  import pandas.util.testing as tm\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = AutoTS(forecast_length=10, frequency='infer',\n",
        "               ensemble='simple', drop_data_older_than_periods=200)\n",
        "model.fit(df, date_col='Date', value_col='Close', id_col=None)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BeNuyGN8OeVA",
        "outputId": "c936094f-1e95-44e7-92c1-99b6937308a7"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Inferred frequency is: B\n",
            "Old data dropped by `drop_data_older_than_periods`.\n",
            "Model Number: 1 with model AverageValueNaive in generation 0 of 10\n",
            "Model Number: 2 with model AverageValueNaive in generation 0 of 10\n",
            "Model Number: 3 with model AverageValueNaive in generation 0 of 10\n",
            "Model Number: 4 with model DatepartRegression in generation 0 of 10\n",
            "Model Number: 5 with model DatepartRegression in generation 0 of 10\n",
            "Model Number: 6 with model DatepartRegression in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 7 with model DatepartRegression in generation 0 of 10\n",
            "Epoch 1/50\n",
            "6/6 [==============================] - 11s 9ms/step - loss: 0.3842\n",
            "Epoch 2/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.3759\n",
            "Epoch 3/50\n",
            "6/6 [==============================] - 0s 12ms/step - loss: 0.3697\n",
            "Epoch 4/50\n",
            "6/6 [==============================] - 0s 11ms/step - loss: 0.3673\n",
            "Epoch 5/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.3566\n",
            "Epoch 6/50\n",
            "6/6 [==============================] - 0s 11ms/step - loss: 0.3501\n",
            "Epoch 7/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.3513\n",
            "Epoch 8/50\n",
            "6/6 [==============================] - 0s 14ms/step - loss: 0.3405\n",
            "Epoch 9/50\n",
            "6/6 [==============================] - 0s 8ms/step - loss: 0.3289\n",
            "Epoch 10/50\n",
            "6/6 [==============================] - 0s 13ms/step - loss: 0.3222\n",
            "Epoch 11/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.3176\n",
            "Epoch 12/50\n",
            "6/6 [==============================] - 0s 14ms/step - loss: 0.3223\n",
            "Epoch 13/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.3201\n",
            "Epoch 14/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.3217\n",
            "Epoch 15/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.3134\n",
            "Epoch 16/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.3171\n",
            "Epoch 17/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.3186\n",
            "Epoch 18/50\n",
            "6/6 [==============================] - 0s 12ms/step - loss: 0.3169\n",
            "Epoch 19/50\n",
            "6/6 [==============================] - 0s 13ms/step - loss: 0.3100\n",
            "Epoch 20/50\n",
            "6/6 [==============================] - 0s 14ms/step - loss: 0.3164\n",
            "Epoch 21/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.3128\n",
            "Epoch 22/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.3060\n",
            "Epoch 23/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.3086\n",
            "Epoch 24/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.3065\n",
            "Epoch 25/50\n",
            "6/6 [==============================] - 0s 12ms/step - loss: 0.3003\n",
            "Epoch 26/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.3052\n",
            "Epoch 27/50\n",
            "6/6 [==============================] - 0s 8ms/step - loss: 0.3030\n",
            "Epoch 28/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.3022\n",
            "Epoch 29/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.2963\n",
            "Epoch 30/50\n",
            "6/6 [==============================] - 0s 14ms/step - loss: 0.2956\n",
            "Epoch 31/50\n",
            "6/6 [==============================] - 0s 7ms/step - loss: 0.2960\n",
            "Epoch 32/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.2978\n",
            "Epoch 33/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.2953\n",
            "Epoch 34/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.2951\n",
            "Epoch 35/50\n",
            "6/6 [==============================] - 0s 12ms/step - loss: 0.2885\n",
            "Epoch 36/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.2924\n",
            "Epoch 37/50\n",
            "6/6 [==============================] - 0s 12ms/step - loss: 0.2869\n",
            "Epoch 38/50\n",
            "6/6 [==============================] - 0s 12ms/step - loss: 0.2911\n",
            "Epoch 39/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.2847\n",
            "Epoch 40/50\n",
            "6/6 [==============================] - 0s 13ms/step - loss: 0.2843\n",
            "Epoch 41/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.2815\n",
            "Epoch 42/50\n",
            "6/6 [==============================] - 0s 9ms/step - loss: 0.2800\n",
            "Epoch 43/50\n",
            "6/6 [==============================] - 0s 8ms/step - loss: 0.2798\n",
            "Epoch 44/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.2825\n",
            "Epoch 45/50\n",
            "6/6 [==============================] - 0s 8ms/step - loss: 0.2846\n",
            "Epoch 46/50\n",
            "6/6 [==============================] - 0s 11ms/step - loss: 0.2741\n",
            "Epoch 47/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.2784\n",
            "Epoch 48/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.2756\n",
            "Epoch 49/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.2761\n",
            "Epoch 50/50\n",
            "6/6 [==============================] - 0s 10ms/step - loss: 0.2716\n",
            "Template Eval Error: ValueError('Model DatepartRegression returned NaN for one or more series. fail_on_forecast_nan=True') in model 7: DatepartRegression\n",
            "Model Number: 8 with model ETS in generation 0 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 9 with model ETS in generation 0 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 10 with model GLM in generation 0 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 10: GLM\n",
            "Model Number: 11 with model GLM in generation 0 of 10\n",
            "Model Number: 12 with model GLS in generation 0 of 10\n",
            "Model Number: 13 with model GLS in generation 0 of 10\n",
            "Model Number: 14 with model LastValueNaive in generation 0 of 10\n",
            "Model Number: 15 with model LastValueNaive in generation 0 of 10\n",
            "Model Number: 16 with model LastValueNaive in generation 0 of 10\n",
            "Model Number: 17 with model LastValueNaive in generation 0 of 10\n",
            "Model Number: 18 with model SeasonalNaive in generation 0 of 10\n",
            "Model Number: 19 with model SeasonalNaive in generation 0 of 10\n",
            "Model Number: 20 with model SeasonalNaive in generation 0 of 10\n",
            "Model Number: 21 with model UnobservedComponents in generation 0 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 21: UnobservedComponents\n",
            "Model Number: 22 with model UnobservedComponents in generation 0 of 10\n",
            "Model Number: 23 with model UnobservedComponents in generation 0 of 10\n",
            "Model Number: 24 with model VAR in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 24: VAR\n",
            "Model Number: 25 with model VAR in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 25: VAR\n",
            "Model Number: 26 with model VECM in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 26: VECM\n",
            "Model Number: 27 with model VECM in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 27: VECM\n",
            "Model Number: 28 with model WindowRegression in generation 0 of 10\n",
            "Model Number: 29 with model ConstantNaive in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 30 with model FBProphet in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 31 with model MultivariateRegression in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.5s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 32 with model MultivariateRegression in generation 0 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 32: MultivariateRegression\n",
            "Model Number: 33 with model DatepartRegression in generation 0 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 33: DatepartRegression\n",
            "Model Number: 34 with model SeasonalNaive in generation 0 of 10\n",
            "Model Number: 35 with model DatepartRegression in generation 0 of 10\n",
            "Model Number: 36 with model UnobservedComponents in generation 0 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 36: UnobservedComponents\n",
            "Model Number: 37 with model UnobservedComponents in generation 0 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 37: UnobservedComponents\n",
            "Model Number: 38 with model ETS in generation 0 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 39 with model VECM in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 39: VECM\n",
            "Model Number: 40 with model ARDL in generation 0 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 40: ARDL\n",
            "Model Number: 41 with model MultivariateMotif in generation 0 of 10\n",
            "Model Number: 42 with model MultivariateMotif in generation 0 of 10\n",
            "Model Number: 43 with model UnivariateMotif in generation 0 of 10\n",
            "Model Number: 44 with model UnivariateMotif in generation 0 of 10\n",
            "Model Number: 45 with model SectionalMotif in generation 0 of 10\n",
            "Model Number: 46 with model SectionalMotif in generation 0 of 10\n",
            "Model Number: 47 with model MultivariateRegression in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 48 with model FBProphet in generation 0 of 10\n",
            "Model Number: 49 with model SeasonalNaive in generation 0 of 10\n",
            "Model Number: 50 with model DatepartRegression in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 100 out of 100 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 51 with model NVAR in generation 0 of 10\n",
            "Model Number: 52 with model Theta in generation 0 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 52: Theta\n",
            "Model Number: 53 with model ConstantNaive in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 54 with model LastValueNaive in generation 0 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 54: LastValueNaive\n",
            "Model Number: 55 with model AverageValueNaive in generation 0 of 10\n",
            "Model Number: 56 with model GLS in generation 0 of 10\n",
            "Model Number: 57 with model SeasonalNaive in generation 0 of 10\n",
            "Model Number: 58 with model GLM in generation 0 of 10\n",
            "Template Eval Error: ValueError('regression_type=user and no future_regressor passed') in model 58: GLM\n",
            "Model Number: 59 with model ETS in generation 0 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 60 with model FBProphet in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 61 with model UnobservedComponents in generation 0 of 10\n",
            "Model Number: 62 with model VAR in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 62: VAR\n",
            "Model Number: 63 with model VECM in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 63: VECM\n",
            "Model Number: 64 with model WindowRegression in generation 0 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 64: WindowRegression\n",
            "Model Number: 65 with model DatepartRegression in generation 0 of 10\n",
            "Model Number: 66 with model MultivariateRegression in generation 0 of 10\n",
            "Model Number: 67 with model UnivariateMotif in generation 0 of 10\n",
            "Model Number: 68 with model MultivariateMotif in generation 0 of 10\n",
            "Model Number: 69 with model SectionalMotif in generation 0 of 10\n",
            "Model Number: 70 with model NVAR in generation 0 of 10\n",
            "Model Number: 71 with model Theta in generation 0 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 71: Theta\n",
            "Model Number: 72 with model ARDL in generation 0 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 72: ARDL\n",
            "Model Number: 73 with model VECM in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 73: VECM\n",
            "Model Number: 74 with model MultivariateRegression in generation 0 of 10\n",
            "Model Number: 75 with model WindowRegression in generation 0 of 10\n",
            "Model Number: 76 with model SectionalMotif in generation 0 of 10\n",
            "Model Number: 77 with model Theta in generation 0 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 77: Theta\n",
            "Model Number: 78 with model GLS in generation 0 of 10\n",
            "Model Number: 79 with model VECM in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 79: VECM\n",
            "Model Number: 80 with model WindowRegression in generation 0 of 10\n",
            "Model Number: 81 with model SectionalMotif in generation 0 of 10\n",
            "Template Eval Error: ValueError(\"regression_type=='User' but no future_regressor supplied\") in model 81: SectionalMotif\n",
            "Model Number: 82 with model MultivariateMotif in generation 0 of 10\n",
            "Model Number: 83 with model ConstantNaive in generation 0 of 10\n",
            "Model Number: 84 with model VECM in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 84: VECM\n",
            "Model Number: 85 with model SectionalMotif in generation 0 of 10\n",
            "Model Number: 86 with model LastValueNaive in generation 0 of 10\n",
            "Model Number: 87 with model LastValueNaive in generation 0 of 10\n",
            "Model Number: 88 with model UnivariateMotif in generation 0 of 10\n",
            "Model Number: 89 with model ETS in generation 0 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 90 with model ConstantNaive in generation 0 of 10\n",
            "Model Number: 91 with model MultivariateRegression in generation 0 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 91: MultivariateRegression\n",
            "Model Number: 92 with model ARDL in generation 0 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 92: ARDL\n",
            "Model Number: 93 with model NVAR in generation 0 of 10\n",
            "Model Number: 94 with model SectionalMotif in generation 0 of 10\n",
            "Model Number: 95 with model UnivariateMotif in generation 0 of 10\n",
            "Template Eval Error: ValueError('Model UnivariateMotif returned NaN for one or more series. fail_on_forecast_nan=True') in model 95: UnivariateMotif\n",
            "Model Number: 96 with model UnobservedComponents in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:48: RuntimeWarning: invalid value encountered in reduce\n",
            "  return umr_sum(a, axis, dtype, out, keepdims, initial, where)\n",
            "/usr/local/lib/python3.7/dist-packages/numpy/lib/function_base.py:412: RuntimeWarning: invalid value encountered in true_divide\n",
            "  avg = np.multiply(a, wgt, dtype=result_dtype).sum(axis)/scl\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 97 with model DatepartRegression in generation 0 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 97: DatepartRegression\n",
            "Model Number: 98 with model Theta in generation 0 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 98: Theta\n",
            "Model Number: 99 with model ConstantNaive in generation 0 of 10\n",
            "Model Number: 100 with model NVAR in generation 0 of 10\n",
            "Model Number: 101 with model ConstantNaive in generation 0 of 10\n",
            "Model Number: 102 with model FBProphet in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 103 with model ConstantNaive in generation 0 of 10\n",
            "Model Number: 104 with model DatepartRegression in generation 0 of 10\n",
            "Epoch 1/50\n",
            "3/3 [==============================] - 10s 35ms/step - loss: 105.5389\n",
            "Epoch 2/50\n",
            "3/3 [==============================] - 0s 23ms/step - loss: 110.9122\n",
            "Epoch 3/50\n",
            "3/3 [==============================] - 0s 23ms/step - loss: 110.0312\n",
            "Epoch 4/50\n",
            "3/3 [==============================] - 0s 23ms/step - loss: 106.6186\n",
            "Epoch 5/50\n",
            "3/3 [==============================] - 0s 20ms/step - loss: 100.1441\n",
            "Epoch 6/50\n",
            "3/3 [==============================] - 0s 22ms/step - loss: 103.4184\n",
            "Epoch 7/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 99.5225\n",
            "Epoch 8/50\n",
            "3/3 [==============================] - 0s 23ms/step - loss: 103.4080\n",
            "Epoch 9/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 103.6609\n",
            "Epoch 10/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 100.5946\n",
            "Epoch 11/50\n",
            "3/3 [==============================] - 0s 20ms/step - loss: 101.7312\n",
            "Epoch 12/50\n",
            "3/3 [==============================] - 0s 15ms/step - loss: 103.6250\n",
            "Epoch 13/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 103.4392\n",
            "Epoch 14/50\n",
            "3/3 [==============================] - 0s 21ms/step - loss: 102.6352\n",
            "Epoch 15/50\n",
            "3/3 [==============================] - 0s 18ms/step - loss: 102.7198\n",
            "Epoch 16/50\n",
            "3/3 [==============================] - 0s 20ms/step - loss: 101.5285\n",
            "Epoch 17/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 99.8761\n",
            "Epoch 18/50\n",
            "3/3 [==============================] - 0s 16ms/step - loss: 102.0560\n",
            "Epoch 19/50\n",
            "3/3 [==============================] - 0s 21ms/step - loss: 104.2465\n",
            "Epoch 20/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 102.3358\n",
            "Epoch 21/50\n",
            "3/3 [==============================] - 0s 17ms/step - loss: 102.1394\n",
            "Epoch 22/50\n",
            "3/3 [==============================] - 0s 23ms/step - loss: 100.0253\n",
            "Epoch 23/50\n",
            "3/3 [==============================] - 0s 20ms/step - loss: 100.2469\n",
            "Epoch 24/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 98.7300\n",
            "Epoch 25/50\n",
            "3/3 [==============================] - 0s 18ms/step - loss: 104.1312\n",
            "Epoch 26/50\n",
            "3/3 [==============================] - 0s 16ms/step - loss: 100.4883\n",
            "Epoch 27/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 102.3648\n",
            "Epoch 28/50\n",
            "3/3 [==============================] - 0s 24ms/step - loss: 102.2480\n",
            "Epoch 29/50\n",
            "3/3 [==============================] - 0s 21ms/step - loss: 99.5961\n",
            "Epoch 30/50\n",
            "3/3 [==============================] - 0s 20ms/step - loss: 103.5358\n",
            "Epoch 31/50\n",
            "3/3 [==============================] - 0s 31ms/step - loss: 101.3649\n",
            "Epoch 32/50\n",
            "3/3 [==============================] - 0s 21ms/step - loss: 100.8067\n",
            "Epoch 33/50\n",
            "3/3 [==============================] - 0s 22ms/step - loss: 100.2066\n",
            "Epoch 34/50\n",
            "3/3 [==============================] - 0s 18ms/step - loss: 102.7061\n",
            "Epoch 35/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 104.1639\n",
            "Epoch 36/50\n",
            "3/3 [==============================] - 0s 18ms/step - loss: 101.2061\n",
            "Epoch 37/50\n",
            "3/3 [==============================] - 0s 17ms/step - loss: 100.2809\n",
            "Epoch 38/50\n",
            "3/3 [==============================] - 0s 20ms/step - loss: 100.6508\n",
            "Epoch 39/50\n",
            "3/3 [==============================] - 0s 24ms/step - loss: 99.9308\n",
            "Epoch 40/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 102.1175\n",
            "Epoch 41/50\n",
            "3/3 [==============================] - 0s 27ms/step - loss: 99.1804\n",
            "Epoch 42/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 100.8406\n",
            "Epoch 43/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 101.7274\n",
            "Epoch 44/50\n",
            "3/3 [==============================] - 0s 20ms/step - loss: 100.9767\n",
            "Epoch 45/50\n",
            "3/3 [==============================] - 0s 18ms/step - loss: 99.7203\n",
            "Epoch 46/50\n",
            "3/3 [==============================] - 0s 18ms/step - loss: 101.3206\n",
            "Epoch 47/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 101.2191\n",
            "Epoch 48/50\n",
            "3/3 [==============================] - 0s 19ms/step - loss: 100.0545\n",
            "Epoch 49/50\n",
            "3/3 [==============================] - 0s 18ms/step - loss: 101.5839\n",
            "Epoch 50/50\n",
            "3/3 [==============================] - 0s 18ms/step - loss: 99.9166\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Template Eval Error: ValueError('Model DatepartRegression returned NaN for one or more series. fail_on_forecast_nan=True') in model 104: DatepartRegression\n",
            "Model Number: 105 with model FBProphet in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 106 with model FBProphet in generation 0 of 10\n",
            "Model Number: 107 with model MultivariateRegression in generation 0 of 10\n",
            "Model Number: 108 with model Theta in generation 0 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 108: Theta\n",
            "Model Number: 109 with model MultivariateRegression in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\n",
            "ABNORMAL_TERMINATION_IN_LNSRCH.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 110 with model LastValueNaive in generation 0 of 10\n",
            "Model Number: 111 with model GLS in generation 0 of 10\n",
            "Model Number: 112 with model ConstantNaive in generation 0 of 10\n",
            "Model Number: 113 with model DatepartRegression in generation 0 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 113: DatepartRegression\n",
            "Model Number: 114 with model GLS in generation 0 of 10\n",
            "Model Number: 115 with model UnobservedComponents in generation 0 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 115: UnobservedComponents\n",
            "Model Number: 116 with model DatepartRegression in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 117 with model DatepartRegression in generation 0 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 117: DatepartRegression\n",
            "Model Number: 118 with model UnobservedComponents in generation 0 of 10\n",
            "Model Number: 119 with model MultivariateRegression in generation 0 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 119: MultivariateRegression\n",
            "Model Number: 120 with model UnivariateMotif in generation 0 of 10\n",
            "Model Number: 121 with model SeasonalNaive in generation 0 of 10\n",
            "Model Number: 122 with model GLS in generation 0 of 10\n",
            "Model Number: 123 with model SectionalMotif in generation 0 of 10\n",
            "Model Number: 124 with model MultivariateMotif in generation 0 of 10\n",
            "Model Number: 125 with model UnivariateMotif in generation 0 of 10\n",
            "Model Number: 126 with model VAR in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 126: VAR\n",
            "Model Number: 127 with model LastValueNaive in generation 0 of 10\n",
            "Model Number: 128 with model UnivariateMotif in generation 0 of 10\n",
            "Model Number: 129 with model GLM in generation 0 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 129: GLM\n",
            "Model Number: 130 with model MultivariateMotif in generation 0 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 130: MultivariateMotif\n",
            "Model Number: 131 with model GLM in generation 0 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 131: GLM\n",
            "Model Number: 132 with model LastValueNaive in generation 0 of 10\n",
            "Model Number: 133 with model UnobservedComponents in generation 0 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor supplied\") in model 133: UnobservedComponents\n",
            "Model Number: 134 with model Theta in generation 0 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 134: Theta\n",
            "Model Number: 135 with model VAR in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 135: VAR\n",
            "Model Number: 136 with model NVAR in generation 0 of 10\n",
            "Model Number: 137 with model UnivariateMotif in generation 0 of 10\n",
            "Model Number: 138 with model ConstantNaive in generation 0 of 10\n",
            "Model Number: 139 with model SectionalMotif in generation 0 of 10\n",
            "Model Number: 140 with model ConstantNaive in generation 0 of 10\n",
            "Model Number: 141 with model AverageValueNaive in generation 0 of 10\n",
            "Model Number: 142 with model AverageValueNaive in generation 0 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 142: AverageValueNaive\n",
            "Model Number: 143 with model GLS in generation 0 of 10\n",
            "Model Number: 144 with model ARDL in generation 0 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 144: ARDL\n",
            "Model Number: 145 with model UnivariateMotif in generation 0 of 10\n",
            "Model Number: 146 with model WindowRegression in generation 0 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 1000 out of 1000 | elapsed:    2.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 147 with model ARDL in generation 0 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 147: ARDL\n",
            "Model Number: 148 with model LastValueNaive in generation 0 of 10\n",
            "Model Number: 149 with model ConstantNaive in generation 0 of 10\n",
            "Model Number: 150 with model VECM in generation 0 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 150: VECM\n",
            "Model Number: 151 with model NVAR in generation 0 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 151: NVAR\n",
            "Model Number: 152 with model NVAR in generation 0 of 10\n",
            "New Generation: 1 of 10\n",
            "Model Number: 153 with model SectionalMotif in generation 1 of 10\n",
            "Model Number: 154 with model SectionalMotif in generation 1 of 10\n",
            "Model Number: 155 with model SectionalMotif in generation 1 of 10\n",
            "Model Number: 156 with model SectionalMotif in generation 1 of 10\n",
            "Model Number: 157 with model DatepartRegression in generation 1 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 157: DatepartRegression\n",
            "Model Number: 158 with model DatepartRegression in generation 1 of 10\n",
            "Template Eval Error: ValueError('Model DatepartRegression returned NaN for one or more series. fail_on_forecast_nan=True') in model 158: DatepartRegression\n",
            "Model Number: 159 with model DatepartRegression in generation 1 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/neighbors/_regression.py:470: UserWarning: One or more samples have no neighbors within specified radius; predicting NaN.\n",
            "  warnings.warn(empty_warning_msg)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 160 with model NVAR in generation 1 of 10\n",
            "Model Number: 161 with model NVAR in generation 1 of 10\n",
            "Model Number: 162 with model NVAR in generation 1 of 10\n",
            "Model Number: 163 with model NVAR in generation 1 of 10\n",
            "Model Number: 164 with model LastValueNaive in generation 1 of 10\n",
            "Model Number: 165 with model LastValueNaive in generation 1 of 10\n",
            "Model Number: 166 with model LastValueNaive in generation 1 of 10\n",
            "Model Number: 167 with model WindowRegression in generation 1 of 10\n",
            "Model Number: 168 with model WindowRegression in generation 1 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/experimental/enable_hist_gradient_boosting.py:17: UserWarning: Since version 1.0, it is not needed to import enable_hist_gradient_boosting anymore. HistGradientBoostingClassifier and HistGradientBoostingRegressor are now stable and can be normally imported from sklearn.ensemble.\n",
            "  \"Since version 1.0, \"\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 169 with model WindowRegression in generation 1 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 169: WindowRegression\n",
            "Model Number: 170 with model ETS in generation 1 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 171 with model ETS in generation 1 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 172 with model ETS in generation 1 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 173 with model ETS in generation 1 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 174 with model UnobservedComponents in generation 1 of 10\n",
            "Model Number: 175 with model UnobservedComponents in generation 1 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 175: UnobservedComponents\n",
            "Model Number: 176 with model UnobservedComponents in generation 1 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor supplied\") in model 176: UnobservedComponents\n",
            "Model Number: 177 with model AverageValueNaive in generation 1 of 10\n",
            "Model Number: 178 with model AverageValueNaive in generation 1 of 10\n",
            "Model Number: 179 with model AverageValueNaive in generation 1 of 10\n",
            "Model Number: 180 with model SeasonalNaive in generation 1 of 10\n",
            "Model Number: 181 with model SeasonalNaive in generation 1 of 10\n",
            "Model Number: 182 with model SeasonalNaive in generation 1 of 10\n",
            "Model Number: 183 with model SeasonalNaive in generation 1 of 10\n",
            "Model Number: 184 with model MultivariateRegression in generation 1 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 1000 out of 1000 | elapsed:    2.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.8s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 185 with model MultivariateRegression in generation 1 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 1000 out of 1000 | elapsed:    2.9s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 186 with model MultivariateRegression in generation 1 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 186: MultivariateRegression\n",
            "Model Number: 187 with model MultivariateRegression in generation 1 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.7s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 188 with model UnivariateMotif in generation 1 of 10\n",
            "Model Number: 189 with model UnivariateMotif in generation 1 of 10\n",
            "Model Number: 190 with model UnivariateMotif in generation 1 of 10\n",
            "Model Number: 191 with model UnivariateMotif in generation 1 of 10\n",
            "Model Number: 192 with model GLS in generation 1 of 10\n",
            "Model Number: 193 with model GLS in generation 1 of 10\n",
            "Model Number: 194 with model GLS in generation 1 of 10\n",
            "Model Number: 195 with model MultivariateMotif in generation 1 of 10\n",
            "Template Eval Error: ValueError('Model MultivariateMotif returned NaN for one or more series. fail_on_forecast_nan=True') in model 195: MultivariateMotif\n",
            "Model Number: 196 with model MultivariateMotif in generation 1 of 10\n",
            "Model Number: 197 with model MultivariateMotif in generation 1 of 10\n",
            "Model Number: 198 with model MultivariateMotif in generation 1 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:48: RuntimeWarning: invalid value encountered in reduce\n",
            "  return umr_sum(a, axis, dtype, out, keepdims, initial, where)\n",
            "/usr/local/lib/python3.7/dist-packages/numpy/lib/function_base.py:412: RuntimeWarning: invalid value encountered in true_divide\n",
            "  avg = np.multiply(a, wgt, dtype=result_dtype).sum(axis)/scl\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 199 with model FBProphet in generation 1 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 199: FBProphet\n",
            "Model Number: 200 with model FBProphet in generation 1 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 201 with model FBProphet in generation 1 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 201: FBProphet\n",
            "Model Number: 202 with model FBProphet in generation 1 of 10\n",
            "Model Number: 203 with model ConstantNaive in generation 1 of 10\n",
            "Model Number: 204 with model ConstantNaive in generation 1 of 10\n",
            "Model Number: 205 with model ConstantNaive in generation 1 of 10\n",
            "Model Number: 206 with model GLM in generation 1 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/genmod/families/family.py:1223: RuntimeWarning: divide by zero encountered in true_divide\n",
            "  endog_mu = self._clean(endog / mu)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 207 with model GLM in generation 1 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 207: GLM\n",
            "Model Number: 208 with model GLM in generation 1 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 208: GLM\n",
            "Model Number: 209 with model GLM in generation 1 of 10\n",
            "Model Number: 210 with model VAR in generation 1 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 210: VAR\n",
            "Model Number: 211 with model VAR in generation 1 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 211: VAR\n",
            "Model Number: 212 with model VAR in generation 1 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 212: VAR\n",
            "Model Number: 213 with model VAR in generation 1 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 213: VAR\n",
            "Model Number: 214 with model VECM in generation 1 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 214: VECM\n",
            "Model Number: 215 with model VECM in generation 1 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 215: VECM\n",
            "Model Number: 216 with model VECM in generation 1 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 216: VECM\n",
            "Model Number: 217 with model VECM in generation 1 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 217: VECM\n",
            "Model Number: 218 with model ARDL in generation 1 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 218: ARDL\n",
            "Model Number: 219 with model ARDL in generation 1 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 219: ARDL\n",
            "Model Number: 220 with model ARDL in generation 1 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 220: ARDL\n",
            "Model Number: 221 with model ARDL in generation 1 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 221: ARDL\n",
            "Model Number: 222 with model Theta in generation 1 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 222: Theta\n",
            "Model Number: 223 with model Theta in generation 1 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 223: Theta\n",
            "Model Number: 224 with model Theta in generation 1 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 224: Theta\n",
            "Model Number: 225 with model Theta in generation 1 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 225: Theta\n",
            "New Generation: 2 of 10\n",
            "Model Number: 226 with model SectionalMotif in generation 2 of 10\n",
            "Model Number: 227 with model SectionalMotif in generation 2 of 10\n",
            "Model Number: 228 with model SectionalMotif in generation 2 of 10\n",
            "Model Number: 229 with model SectionalMotif in generation 2 of 10\n",
            "Model Number: 230 with model NVAR in generation 2 of 10\n",
            "Model Number: 231 with model NVAR in generation 2 of 10\n",
            "Model Number: 232 with model NVAR in generation 2 of 10\n",
            "Model Number: 233 with model NVAR in generation 2 of 10\n",
            "Model Number: 234 with model DatepartRegression in generation 2 of 10\n",
            "Model Number: 235 with model DatepartRegression in generation 2 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 1000 out of 1000 | elapsed:    2.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.2s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 236 with model DatepartRegression in generation 2 of 10\n",
            "Template Eval Error: ValueError('Failed to convert a NumPy array to a Tensor (Unsupported object type int).') in model 236: DatepartRegression\n",
            "Model Number: 237 with model AverageValueNaive in generation 2 of 10\n",
            "Model Number: 238 with model AverageValueNaive in generation 2 of 10\n",
            "Model Number: 239 with model AverageValueNaive in generation 2 of 10\n",
            "Model Number: 240 with model LastValueNaive in generation 2 of 10\n",
            "Model Number: 241 with model LastValueNaive in generation 2 of 10\n",
            "Model Number: 242 with model WindowRegression in generation 2 of 10\n",
            "Model Number: 243 with model WindowRegression in generation 2 of 10\n",
            "Model Number: 244 with model WindowRegression in generation 2 of 10\n",
            "Model Number: 245 with model ETS in generation 2 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 246 with model ETS in generation 2 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "ETS failed on Close with ValueError('endog must be strictly positive when using multiplicative trend or seasonal components.')\n",
            "Model Number: 247 with model ETS in generation 2 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 248 with model SeasonalNaive in generation 2 of 10\n",
            "Model Number: 249 with model SeasonalNaive in generation 2 of 10\n",
            "Model Number: 250 with model SeasonalNaive in generation 2 of 10\n",
            "Model Number: 251 with model SeasonalNaive in generation 2 of 10\n",
            "Model Number: 252 with model UnobservedComponents in generation 2 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 252: UnobservedComponents\n",
            "Model Number: 253 with model UnobservedComponents in generation 2 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor supplied\") in model 253: UnobservedComponents\n",
            "Model Number: 254 with model UnobservedComponents in generation 2 of 10\n",
            "Model Number: 255 with model MultivariateRegression in generation 2 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 255: MultivariateRegression\n",
            "Model Number: 256 with model MultivariateRegression in generation 2 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 256: MultivariateRegression\n",
            "Model Number: 257 with model MultivariateRegression in generation 2 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 257: MultivariateRegression\n",
            "Model Number: 258 with model MultivariateRegression in generation 2 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.5s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 259 with model MultivariateMotif in generation 2 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 260 with model MultivariateMotif in generation 2 of 10\n",
            "Model Number: 261 with model MultivariateMotif in generation 2 of 10\n",
            "Model Number: 262 with model MultivariateMotif in generation 2 of 10\n",
            "Model Number: 263 with model ConstantNaive in generation 2 of 10\n",
            "Model Number: 264 with model ConstantNaive in generation 2 of 10\n",
            "Model Number: 265 with model ConstantNaive in generation 2 of 10\n",
            "Model Number: 266 with model FBProphet in generation 2 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 267 with model FBProphet in generation 2 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 268 with model FBProphet in generation 2 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 269 with model FBProphet in generation 2 of 10\n",
            "Model Number: 270 with model UnivariateMotif in generation 2 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 270: UnivariateMotif\n",
            "Model Number: 271 with model UnivariateMotif in generation 2 of 10\n",
            "Model Number: 272 with model UnivariateMotif in generation 2 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 272: UnivariateMotif\n",
            "Model Number: 273 with model UnivariateMotif in generation 2 of 10\n",
            "Model Number: 274 with model GLS in generation 2 of 10\n",
            "Model Number: 275 with model GLS in generation 2 of 10\n",
            "Model Number: 276 with model GLS in generation 2 of 10\n",
            "Model Number: 277 with model GLM in generation 2 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 277: GLM\n",
            "Model Number: 278 with model GLM in generation 2 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 278: GLM\n",
            "Model Number: 279 with model GLM in generation 2 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/genmod/families/family.py:1223: RuntimeWarning: divide by zero encountered in true_divide\n",
            "  endog_mu = self._clean(endog / mu)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 280 with model GLM in generation 2 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 280: GLM\n",
            "Model Number: 281 with model VAR in generation 2 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 281: VAR\n",
            "Model Number: 282 with model VAR in generation 2 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 282: VAR\n",
            "Model Number: 283 with model VAR in generation 2 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 283: VAR\n",
            "Model Number: 284 with model VAR in generation 2 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 284: VAR\n",
            "Model Number: 285 with model VECM in generation 2 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 285: VECM\n",
            "Model Number: 286 with model VECM in generation 2 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 286: VECM\n",
            "Model Number: 287 with model VECM in generation 2 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 287: VECM\n",
            "Model Number: 288 with model VECM in generation 2 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 288: VECM\n",
            "Model Number: 289 with model ARDL in generation 2 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 289: ARDL\n",
            "Model Number: 290 with model ARDL in generation 2 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 290: ARDL\n",
            "Model Number: 291 with model ARDL in generation 2 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 291: ARDL\n",
            "Model Number: 292 with model ARDL in generation 2 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 292: ARDL\n",
            "Model Number: 293 with model Theta in generation 2 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 293: Theta\n",
            "Model Number: 294 with model Theta in generation 2 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 294: Theta\n",
            "Model Number: 295 with model Theta in generation 2 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 295: Theta\n",
            "Model Number: 296 with model Theta in generation 2 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 296: Theta\n",
            "New Generation: 3 of 10\n",
            "Model Number: 297 with model NVAR in generation 3 of 10\n",
            "Model Number: 298 with model NVAR in generation 3 of 10\n",
            "Model Number: 299 with model NVAR in generation 3 of 10\n",
            "Model Number: 300 with model SectionalMotif in generation 3 of 10\n",
            "Model Number: 301 with model SectionalMotif in generation 3 of 10\n",
            "Model Number: 302 with model SectionalMotif in generation 3 of 10\n",
            "Model Number: 303 with model SectionalMotif in generation 3 of 10\n",
            "Model Number: 304 with model WindowRegression in generation 3 of 10\n",
            "Model Number: 305 with model WindowRegression in generation 3 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 100 out of 100 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 306 with model WindowRegression in generation 3 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 307 with model DatepartRegression in generation 3 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 307: DatepartRegression\n",
            "Model Number: 308 with model DatepartRegression in generation 3 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 308: DatepartRegression\n",
            "Model Number: 309 with model DatepartRegression in generation 3 of 10\n",
            "[LibLinear][LibLinear][LibLinear][LibLinear][LibLinear]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[LibLinear][LibLinear][LibLinear][LibLinear][LibLinear][LibLinear]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[LibLinear][LibLinear][LibLinear][LibLinear][LibLinear]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[LibLinear][LibLinear][LibLinear][LibLinear][LibLinear]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 310 with model AverageValueNaive in generation 3 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 311 with model AverageValueNaive in generation 3 of 10\n",
            "Model Number: 312 with model AverageValueNaive in generation 3 of 10\n",
            "Model Number: 313 with model LastValueNaive in generation 3 of 10\n",
            "Model Number: 314 with model LastValueNaive in generation 3 of 10\n",
            "Model Number: 315 with model MultivariateRegression in generation 3 of 10\n",
            "Model Number: 316 with model MultivariateRegression in generation 3 of 10\n",
            "Model Number: 317 with model MultivariateRegression in generation 3 of 10\n",
            "Model Number: 318 with model MultivariateRegression in generation 3 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.4s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 319 with model ETS in generation 3 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 320 with model UnobservedComponents in generation 3 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 320: UnobservedComponents\n",
            "Model Number: 321 with model UnobservedComponents in generation 3 of 10\n",
            "Model Number: 322 with model UnobservedComponents in generation 3 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor supplied\") in model 322: UnobservedComponents\n",
            "Model Number: 323 with model SeasonalNaive in generation 3 of 10\n",
            "Model Number: 324 with model SeasonalNaive in generation 3 of 10\n",
            "Model Number: 325 with model SeasonalNaive in generation 3 of 10\n",
            "Model Number: 326 with model SeasonalNaive in generation 3 of 10\n",
            "Model Number: 327 with model GLS in generation 3 of 10\n",
            "Model Number: 328 with model GLS in generation 3 of 10\n",
            "Model Number: 329 with model GLS in generation 3 of 10\n",
            "Model Number: 330 with model ConstantNaive in generation 3 of 10\n",
            "Model Number: 331 with model ConstantNaive in generation 3 of 10\n",
            "Model Number: 332 with model ConstantNaive in generation 3 of 10\n",
            "Model Number: 333 with model MultivariateMotif in generation 3 of 10\n",
            "Model Number: 334 with model MultivariateMotif in generation 3 of 10\n",
            "Model Number: 335 with model MultivariateMotif in generation 3 of 10\n",
            "Model Number: 336 with model MultivariateMotif in generation 3 of 10\n",
            "Model Number: 337 with model FBProphet in generation 3 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 29.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 338 with model FBProphet in generation 3 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 339 with model FBProphet in generation 3 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 340 with model FBProphet in generation 3 of 10\n",
            "Model Number: 341 with model UnivariateMotif in generation 3 of 10\n",
            "Model Number: 342 with model UnivariateMotif in generation 3 of 10\n",
            "Model Number: 343 with model UnivariateMotif in generation 3 of 10\n",
            "Model Number: 344 with model UnivariateMotif in generation 3 of 10\n",
            "Model Number: 345 with model GLM in generation 3 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 345: GLM\n",
            "Model Number: 346 with model GLM in generation 3 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 346: GLM\n",
            "Model Number: 347 with model GLM in generation 3 of 10\n",
            "Template Eval Error: ValueError('regression_type=user and no future_regressor passed') in model 347: GLM\n",
            "Model Number: 348 with model GLM in generation 3 of 10\n",
            "Model Number: 349 with model VAR in generation 3 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 349: VAR\n",
            "Model Number: 350 with model VAR in generation 3 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 350: VAR\n",
            "Model Number: 351 with model VAR in generation 3 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 351: VAR\n",
            "Model Number: 352 with model VECM in generation 3 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 352: VECM\n",
            "Model Number: 353 with model VECM in generation 3 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 353: VECM\n",
            "Model Number: 354 with model VECM in generation 3 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 354: VECM\n",
            "Model Number: 355 with model VECM in generation 3 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 355: VECM\n",
            "Model Number: 356 with model ARDL in generation 3 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 356: ARDL\n",
            "Model Number: 357 with model ARDL in generation 3 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 357: ARDL\n",
            "Model Number: 358 with model ARDL in generation 3 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 358: ARDL\n",
            "Model Number: 359 with model ARDL in generation 3 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 359: ARDL\n",
            "Model Number: 360 with model Theta in generation 3 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 360: Theta\n",
            "Model Number: 361 with model Theta in generation 3 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 361: Theta\n",
            "Model Number: 362 with model Theta in generation 3 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 362: Theta\n",
            "Model Number: 363 with model Theta in generation 3 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 363: Theta\n",
            "New Generation: 4 of 10\n",
            "Model Number: 364 with model NVAR in generation 4 of 10\n",
            "Model Number: 365 with model NVAR in generation 4 of 10\n",
            "Model Number: 366 with model NVAR in generation 4 of 10\n",
            "Model Number: 367 with model NVAR in generation 4 of 10\n",
            "Model Number: 368 with model SectionalMotif in generation 4 of 10\n",
            "Model Number: 369 with model SectionalMotif in generation 4 of 10\n",
            "Model Number: 370 with model SectionalMotif in generation 4 of 10\n",
            "Model Number: 371 with model SectionalMotif in generation 4 of 10\n",
            "Model Number: 372 with model WindowRegression in generation 4 of 10\n",
            "Model Number: 373 with model WindowRegression in generation 4 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 374 with model WindowRegression in generation 4 of 10\n",
            "Model Number: 375 with model DatepartRegression in generation 4 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 375: DatepartRegression\n",
            "Model Number: 376 with model DatepartRegression in generation 4 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 376: DatepartRegression\n",
            "Model Number: 377 with model DatepartRegression in generation 4 of 10\n",
            "Epoch 1/50\n",
            "6/6 [==============================] - 11s 37ms/step - loss: 0.1607\n",
            "Epoch 2/50\n",
            "6/6 [==============================] - 0s 34ms/step - loss: 0.0851\n",
            "Epoch 3/50\n",
            "6/6 [==============================] - 0s 37ms/step - loss: 0.1044\n",
            "Epoch 4/50\n",
            "6/6 [==============================] - 0s 38ms/step - loss: 0.0844\n",
            "Epoch 5/50\n",
            "6/6 [==============================] - 0s 37ms/step - loss: 0.0855\n",
            "Epoch 6/50\n",
            "6/6 [==============================] - 0s 38ms/step - loss: 0.0942\n",
            "Epoch 7/50\n",
            "6/6 [==============================] - 0s 42ms/step - loss: 0.0804\n",
            "Epoch 8/50\n",
            "6/6 [==============================] - 0s 42ms/step - loss: 0.0814\n",
            "Epoch 9/50\n",
            "6/6 [==============================] - 0s 39ms/step - loss: 0.0907\n",
            "Epoch 10/50\n",
            "6/6 [==============================] - 0s 36ms/step - loss: 0.0792\n",
            "Epoch 11/50\n",
            "6/6 [==============================] - 0s 44ms/step - loss: 0.0788\n",
            "Epoch 12/50\n",
            "6/6 [==============================] - 0s 40ms/step - loss: 0.0834\n",
            "Epoch 13/50\n",
            "6/6 [==============================] - 0s 37ms/step - loss: 0.0797\n",
            "Epoch 14/50\n",
            "6/6 [==============================] - 0s 38ms/step - loss: 0.0791\n",
            "Epoch 15/50\n",
            "6/6 [==============================] - 0s 44ms/step - loss: 0.0802\n",
            "Epoch 16/50\n",
            "6/6 [==============================] - 0s 38ms/step - loss: 0.0807\n",
            "Epoch 17/50\n",
            "6/6 [==============================] - 0s 36ms/step - loss: 0.0747\n",
            "Epoch 18/50\n",
            "6/6 [==============================] - 0s 36ms/step - loss: 0.0796\n",
            "Epoch 19/50\n",
            "6/6 [==============================] - 0s 37ms/step - loss: 0.0753\n",
            "Epoch 20/50\n",
            "6/6 [==============================] - 0s 35ms/step - loss: 0.0770\n",
            "Epoch 21/50\n",
            "6/6 [==============================] - 0s 35ms/step - loss: 0.0730\n",
            "Epoch 22/50\n",
            "6/6 [==============================] - 0s 35ms/step - loss: 0.0768\n",
            "Epoch 23/50\n",
            "6/6 [==============================] - 0s 34ms/step - loss: 0.0756\n",
            "Epoch 24/50\n",
            "6/6 [==============================] - 0s 32ms/step - loss: 0.0719\n",
            "Epoch 25/50\n",
            "6/6 [==============================] - 0s 38ms/step - loss: 0.0725\n",
            "Epoch 26/50\n",
            "6/6 [==============================] - 0s 36ms/step - loss: 0.0735\n",
            "Epoch 27/50\n",
            "6/6 [==============================] - 0s 39ms/step - loss: 0.0785\n",
            "Epoch 28/50\n",
            "6/6 [==============================] - 0s 36ms/step - loss: 0.0730\n",
            "Epoch 29/50\n",
            "6/6 [==============================] - 0s 35ms/step - loss: 0.0723\n",
            "Epoch 30/50\n",
            "6/6 [==============================] - 0s 39ms/step - loss: 0.0742\n",
            "Epoch 31/50\n",
            "6/6 [==============================] - 0s 38ms/step - loss: 0.0755\n",
            "Epoch 32/50\n",
            "6/6 [==============================] - 0s 36ms/step - loss: 0.0746\n",
            "Epoch 33/50\n",
            "6/6 [==============================] - 0s 42ms/step - loss: 0.0719\n",
            "Epoch 34/50\n",
            "6/6 [==============================] - 0s 38ms/step - loss: 0.0732\n",
            "Epoch 35/50\n",
            "6/6 [==============================] - 0s 37ms/step - loss: 0.0722\n",
            "Epoch 36/50\n",
            "6/6 [==============================] - 0s 35ms/step - loss: 0.0709\n",
            "Epoch 37/50\n",
            "6/6 [==============================] - 0s 32ms/step - loss: 0.0702\n",
            "Epoch 38/50\n",
            "6/6 [==============================] - 0s 35ms/step - loss: 0.0745\n",
            "Epoch 39/50\n",
            "6/6 [==============================] - 0s 37ms/step - loss: 0.0749\n",
            "Epoch 40/50\n",
            "6/6 [==============================] - 0s 39ms/step - loss: 0.0721\n",
            "Epoch 41/50\n",
            "6/6 [==============================] - 0s 35ms/step - loss: 0.0722\n",
            "Epoch 42/50\n",
            "6/6 [==============================] - 0s 36ms/step - loss: 0.0739\n",
            "Epoch 43/50\n",
            "6/6 [==============================] - 0s 46ms/step - loss: 0.0713\n",
            "Epoch 44/50\n",
            "6/6 [==============================] - 0s 36ms/step - loss: 0.0717\n",
            "Epoch 45/50\n",
            "6/6 [==============================] - 0s 35ms/step - loss: 0.0722\n",
            "Epoch 46/50\n",
            "6/6 [==============================] - 0s 37ms/step - loss: 0.0722\n",
            "Epoch 47/50\n",
            "6/6 [==============================] - 0s 37ms/step - loss: 0.0743\n",
            "Epoch 48/50\n",
            "6/6 [==============================] - 0s 35ms/step - loss: 0.0708\n",
            "Epoch 49/50\n",
            "6/6 [==============================] - 0s 40ms/step - loss: 0.0739\n",
            "Epoch 50/50\n",
            "6/6 [==============================] - 0s 35ms/step - loss: 0.0711\n",
            "Template Eval Error: ValueError('Model DatepartRegression returned NaN for one or more series. fail_on_forecast_nan=True') in model 377: DatepartRegression\n",
            "Model Number: 378 with model AverageValueNaive in generation 4 of 10\n",
            "Model Number: 379 with model AverageValueNaive in generation 4 of 10\n",
            "Model Number: 380 with model AverageValueNaive in generation 4 of 10\n",
            "Model Number: 381 with model LastValueNaive in generation 4 of 10\n",
            "Model Number: 382 with model LastValueNaive in generation 4 of 10\n",
            "Model Number: 383 with model LastValueNaive in generation 4 of 10\n",
            "Model Number: 384 with model MultivariateRegression in generation 4 of 10\n",
            "Template Eval Error: ValueError('Some value(s) of y are out of the valid range for family PoissonDistribution') in model 384: MultivariateRegression\n",
            "Model Number: 385 with model MultivariateRegression in generation 4 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 385: MultivariateRegression\n",
            "Model Number: 386 with model MultivariateRegression in generation 4 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 386: MultivariateRegression\n",
            "Model Number: 387 with model MultivariateRegression in generation 4 of 10\n",
            "Model Number: 388 with model ETS in generation 4 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 389 with model ETS in generation 4 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 390 with model ETS in generation 4 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 391 with model ETS in generation 4 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 392 with model UnobservedComponents in generation 4 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor supplied\") in model 392: UnobservedComponents\n",
            "Model Number: 393 with model UnobservedComponents in generation 4 of 10\n",
            "Model Number: 394 with model UnobservedComponents in generation 4 of 10\n",
            "Model Number: 395 with model SeasonalNaive in generation 4 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 395: SeasonalNaive\n",
            "Model Number: 396 with model SeasonalNaive in generation 4 of 10\n",
            "Model Number: 397 with model SeasonalNaive in generation 4 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 397: SeasonalNaive\n",
            "Model Number: 398 with model SeasonalNaive in generation 4 of 10\n",
            "Model Number: 399 with model MultivariateMotif in generation 4 of 10\n",
            "Model Number: 400 with model MultivariateMotif in generation 4 of 10\n",
            "Model Number: 401 with model MultivariateMotif in generation 4 of 10\n",
            "Model Number: 402 with model MultivariateMotif in generation 4 of 10\n",
            "Model Number: 403 with model GLS in generation 4 of 10\n",
            "Model Number: 404 with model GLS in generation 4 of 10\n",
            "Model Number: 405 with model GLS in generation 4 of 10\n",
            "Model Number: 406 with model ConstantNaive in generation 4 of 10\n",
            "Model Number: 407 with model ConstantNaive in generation 4 of 10\n",
            "Model Number: 408 with model ConstantNaive in generation 4 of 10\n",
            "Model Number: 409 with model FBProphet in generation 4 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 410 with model FBProphet in generation 4 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 29.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 411 with model FBProphet in generation 4 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 412 with model FBProphet in generation 4 of 10\n",
            "Model Number: 413 with model UnivariateMotif in generation 4 of 10\n",
            "Model Number: 414 with model UnivariateMotif in generation 4 of 10\n",
            "Model Number: 415 with model UnivariateMotif in generation 4 of 10\n",
            "Model Number: 416 with model UnivariateMotif in generation 4 of 10\n",
            "Model Number: 417 with model GLM in generation 4 of 10\n",
            "Template Eval Error: ValueError('regression_type=user and no future_regressor passed') in model 417: GLM\n",
            "Model Number: 418 with model GLM in generation 4 of 10\n",
            "Template Eval Error: ValueError('regression_type=user and no future_regressor passed') in model 418: GLM\n",
            "Model Number: 419 with model GLM in generation 4 of 10\n",
            "Model Number: 420 with model GLM in generation 4 of 10\n",
            "Template Eval Error: ValueError('The first guess on the deviance function returned a nan.  This could be a boundary  problem and should be reported.') in model 420: GLM\n",
            "Model Number: 421 with model VAR in generation 4 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 421: VAR\n",
            "Model Number: 422 with model VAR in generation 4 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 422: VAR\n",
            "Model Number: 423 with model VAR in generation 4 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 423: VAR\n",
            "Model Number: 424 with model VAR in generation 4 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 424: VAR\n",
            "Model Number: 425 with model VECM in generation 4 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor supplied\") in model 425: VECM\n",
            "Model Number: 426 with model VECM in generation 4 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/genmod/families/family.py:1227: RuntimeWarning: invalid value encountered in log\n",
            "  resid_dev -= endog_alpha * np.log(endog_alpha / mu_alpha)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 426: VECM\n",
            "Model Number: 427 with model VECM in generation 4 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 427: VECM\n",
            "Model Number: 428 with model VECM in generation 4 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 428: VECM\n",
            "Model Number: 429 with model ARDL in generation 4 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 429: ARDL\n",
            "Model Number: 430 with model ARDL in generation 4 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 430: ARDL\n",
            "Model Number: 431 with model ARDL in generation 4 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 431: ARDL\n",
            "Model Number: 432 with model ARDL in generation 4 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 432: ARDL\n",
            "Model Number: 433 with model Theta in generation 4 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 433: Theta\n",
            "Model Number: 434 with model Theta in generation 4 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 434: Theta\n",
            "Model Number: 435 with model Theta in generation 4 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 435: Theta\n",
            "Model Number: 436 with model Theta in generation 4 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 436: Theta\n",
            "New Generation: 5 of 10\n",
            "Model Number: 437 with model NVAR in generation 5 of 10\n",
            "Model Number: 438 with model NVAR in generation 5 of 10\n",
            "Model Number: 439 with model NVAR in generation 5 of 10\n",
            "Model Number: 440 with model NVAR in generation 5 of 10\n",
            "Model Number: 441 with model SectionalMotif in generation 5 of 10\n",
            "Model Number: 442 with model SectionalMotif in generation 5 of 10\n",
            "Model Number: 443 with model SectionalMotif in generation 5 of 10\n",
            "Model Number: 444 with model SectionalMotif in generation 5 of 10\n",
            "Model Number: 445 with model WindowRegression in generation 5 of 10\n",
            "Epoch 1/50\n",
            "5/5 [==============================] - 9s 292ms/step - loss: 0.1712 - val_loss: 0.0936\n",
            "Epoch 2/50\n",
            "5/5 [==============================] - 0s 54ms/step - loss: 0.1661 - val_loss: 0.0926\n",
            "Epoch 3/50\n",
            "5/5 [==============================] - 0s 51ms/step - loss: 0.1614 - val_loss: 0.0917\n",
            "Epoch 4/50\n",
            "5/5 [==============================] - 0s 45ms/step - loss: 0.1557 - val_loss: 0.0908\n",
            "Epoch 5/50\n",
            "5/5 [==============================] - 0s 49ms/step - loss: 0.1515 - val_loss: 0.0899\n",
            "Epoch 6/50\n",
            "5/5 [==============================] - 0s 53ms/step - loss: 0.1533 - val_loss: 0.0891\n",
            "Epoch 7/50\n",
            "5/5 [==============================] - 0s 45ms/step - loss: 0.1451 - val_loss: 0.0882\n",
            "Epoch 8/50\n",
            "5/5 [==============================] - 0s 47ms/step - loss: 0.1350 - val_loss: 0.0874\n",
            "Epoch 9/50\n",
            "5/5 [==============================] - 0s 51ms/step - loss: 0.1344 - val_loss: 0.0866\n",
            "Epoch 10/50\n",
            "5/5 [==============================] - 0s 51ms/step - loss: 0.1326 - val_loss: 0.0859\n",
            "Epoch 11/50\n",
            "5/5 [==============================] - 0s 56ms/step - loss: 0.1326 - val_loss: 0.0853\n",
            "Epoch 12/50\n",
            "5/5 [==============================] - 0s 54ms/step - loss: 0.1292 - val_loss: 0.0846\n",
            "Epoch 13/50\n",
            "5/5 [==============================] - 0s 54ms/step - loss: 0.1226 - val_loss: 0.0840\n",
            "Epoch 14/50\n",
            "5/5 [==============================] - 0s 52ms/step - loss: 0.1218 - val_loss: 0.0834\n",
            "Epoch 15/50\n",
            "5/5 [==============================] - 0s 44ms/step - loss: 0.1203 - val_loss: 0.0829\n",
            "Epoch 16/50\n",
            "5/5 [==============================] - 0s 46ms/step - loss: 0.1156 - val_loss: 0.0823\n",
            "Epoch 17/50\n",
            "5/5 [==============================] - 0s 54ms/step - loss: 0.1142 - val_loss: 0.0818\n",
            "Epoch 18/50\n",
            "5/5 [==============================] - 0s 51ms/step - loss: 0.1083 - val_loss: 0.0813\n",
            "Epoch 19/50\n",
            "5/5 [==============================] - 0s 50ms/step - loss: 0.1077 - val_loss: 0.0808\n",
            "Epoch 20/50\n",
            "5/5 [==============================] - 0s 48ms/step - loss: 0.1076 - val_loss: 0.0804\n",
            "Epoch 21/50\n",
            "5/5 [==============================] - 0s 47ms/step - loss: 0.1079 - val_loss: 0.0799\n",
            "Epoch 22/50\n",
            "5/5 [==============================] - 0s 54ms/step - loss: 0.1076 - val_loss: 0.0795\n",
            "Epoch 23/50\n",
            "5/5 [==============================] - 0s 47ms/step - loss: 0.1011 - val_loss: 0.0792\n",
            "Epoch 24/50\n",
            "5/5 [==============================] - 0s 47ms/step - loss: 0.0981 - val_loss: 0.0790\n",
            "Epoch 25/50\n",
            "5/5 [==============================] - 0s 47ms/step - loss: 0.0972 - val_loss: 0.0787\n",
            "Epoch 26/50\n",
            "5/5 [==============================] - 0s 44ms/step - loss: 0.0943 - val_loss: 0.0785\n",
            "Epoch 27/50\n",
            "5/5 [==============================] - 0s 53ms/step - loss: 0.0929 - val_loss: 0.0782\n",
            "Epoch 28/50\n",
            "5/5 [==============================] - 0s 56ms/step - loss: 0.0930 - val_loss: 0.0780\n",
            "Epoch 29/50\n",
            "5/5 [==============================] - 0s 54ms/step - loss: 0.0911 - val_loss: 0.0778\n",
            "Epoch 30/50\n",
            "5/5 [==============================] - 0s 44ms/step - loss: 0.0890 - val_loss: 0.0775\n",
            "Epoch 31/50\n",
            "5/5 [==============================] - 0s 48ms/step - loss: 0.0876 - val_loss: 0.0773\n",
            "Epoch 32/50\n",
            "5/5 [==============================] - 0s 49ms/step - loss: 0.0864 - val_loss: 0.0771\n",
            "Epoch 33/50\n",
            "5/5 [==============================] - 0s 46ms/step - loss: 0.0817 - val_loss: 0.0769\n",
            "Epoch 34/50\n",
            "5/5 [==============================] - 0s 50ms/step - loss: 0.0834 - val_loss: 0.0766\n",
            "Epoch 35/50\n",
            "5/5 [==============================] - 0s 55ms/step - loss: 0.0829 - val_loss: 0.0764\n",
            "Epoch 36/50\n",
            "5/5 [==============================] - 0s 55ms/step - loss: 0.0799 - val_loss: 0.0763\n",
            "Epoch 37/50\n",
            "5/5 [==============================] - 0s 52ms/step - loss: 0.0818 - val_loss: 0.0762\n",
            "Epoch 38/50\n",
            "5/5 [==============================] - 0s 52ms/step - loss: 0.0791 - val_loss: 0.0762\n",
            "Epoch 39/50\n",
            "5/5 [==============================] - 0s 47ms/step - loss: 0.0792 - val_loss: 0.0762\n",
            "Epoch 40/50\n",
            "5/5 [==============================] - 0s 44ms/step - loss: 0.0772 - val_loss: 0.0761\n",
            "Epoch 41/50\n",
            "5/5 [==============================] - 0s 47ms/step - loss: 0.0739 - val_loss: 0.0760\n",
            "Epoch 42/50\n",
            "5/5 [==============================] - 0s 45ms/step - loss: 0.0775 - val_loss: 0.0759\n",
            "Epoch 43/50\n",
            "5/5 [==============================] - 0s 48ms/step - loss: 0.0737 - val_loss: 0.0757\n",
            "Epoch 44/50\n",
            "5/5 [==============================] - 0s 48ms/step - loss: 0.0772 - val_loss: 0.0756\n",
            "Epoch 45/50\n",
            "5/5 [==============================] - 0s 50ms/step - loss: 0.0717 - val_loss: 0.0755\n",
            "Epoch 46/50\n",
            "5/5 [==============================] - 0s 45ms/step - loss: 0.0704 - val_loss: 0.0755\n",
            "Epoch 47/50\n",
            "5/5 [==============================] - 0s 40ms/step - loss: 0.0680 - val_loss: 0.0753\n",
            "Epoch 48/50\n",
            "5/5 [==============================] - 0s 43ms/step - loss: 0.0731 - val_loss: 0.0753\n",
            "Epoch 49/50\n",
            "5/5 [==============================] - 0s 48ms/step - loss: 0.0709 - val_loss: 0.0752\n",
            "Epoch 50/50\n",
            "5/5 [==============================] - 0s 43ms/step - loss: 0.0705 - val_loss: 0.0752\n",
            "Model Number: 446 with model WindowRegression in generation 5 of 10\n",
            "Model Number: 447 with model WindowRegression in generation 5 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 447: WindowRegression\n",
            "Model Number: 448 with model DatepartRegression in generation 5 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "24/24 [==============================] - 12s 63ms/step - loss: 9.3423\n",
            "Epoch 2/50\n",
            "24/24 [==============================] - 1s 47ms/step - loss: 9.2725\n",
            "Epoch 3/50\n",
            "24/24 [==============================] - 1s 50ms/step - loss: 9.0762\n",
            "Epoch 4/50\n",
            "24/24 [==============================] - 1s 52ms/step - loss: 9.1356\n",
            "Epoch 5/50\n",
            "24/24 [==============================] - 1s 52ms/step - loss: 9.5456\n",
            "Epoch 6/50\n",
            "24/24 [==============================] - 1s 51ms/step - loss: 9.2047\n",
            "Epoch 7/50\n",
            "24/24 [==============================] - 1s 48ms/step - loss: 9.0275\n",
            "Epoch 8/50\n",
            "24/24 [==============================] - 2s 73ms/step - loss: 8.8596\n",
            "Epoch 9/50\n",
            "24/24 [==============================] - 1s 51ms/step - loss: 8.4926\n",
            "Epoch 10/50\n",
            "24/24 [==============================] - 1s 48ms/step - loss: 8.2360\n",
            "Epoch 11/50\n",
            "24/24 [==============================] - 1s 51ms/step - loss: 8.1491\n",
            "Epoch 12/50\n",
            "24/24 [==============================] - 1s 53ms/step - loss: 9.9632\n",
            "Epoch 13/50\n",
            "24/24 [==============================] - 1s 53ms/step - loss: 9.8456\n",
            "Epoch 14/50\n",
            "24/24 [==============================] - 1s 49ms/step - loss: 9.4568\n",
            "Epoch 15/50\n",
            "24/24 [==============================] - 1s 48ms/step - loss: 9.0852\n",
            "Epoch 16/50\n",
            "24/24 [==============================] - 1s 52ms/step - loss: 8.8473\n",
            "Epoch 17/50\n",
            "24/24 [==============================] - 1s 46ms/step - loss: 8.5397\n",
            "Epoch 18/50\n",
            "24/24 [==============================] - 1s 46ms/step - loss: 8.2671\n",
            "Epoch 19/50\n",
            "24/24 [==============================] - 1s 52ms/step - loss: 8.1546\n",
            "Epoch 20/50\n",
            "24/24 [==============================] - 1s 52ms/step - loss: 8.1141\n",
            "Epoch 21/50\n",
            "24/24 [==============================] - 1s 49ms/step - loss: 7.9185\n",
            "Epoch 22/50\n",
            "24/24 [==============================] - 1s 45ms/step - loss: 7.7509\n",
            "Epoch 23/50\n",
            "24/24 [==============================] - 1s 53ms/step - loss: 7.9856\n",
            "Epoch 24/50\n",
            "24/24 [==============================] - 1s 49ms/step - loss: 7.5515\n",
            "Epoch 25/50\n",
            "24/24 [==============================] - 1s 47ms/step - loss: 7.7646\n",
            "Epoch 26/50\n",
            "24/24 [==============================] - 1s 49ms/step - loss: 7.3511\n",
            "Epoch 27/50\n",
            "24/24 [==============================] - 1s 53ms/step - loss: 7.8039\n",
            "Epoch 28/50\n",
            "24/24 [==============================] - 1s 44ms/step - loss: 7.4097\n",
            "Epoch 29/50\n",
            "24/24 [==============================] - 1s 46ms/step - loss: 7.5646\n",
            "Epoch 30/50\n",
            "24/24 [==============================] - 1s 47ms/step - loss: 7.1246\n",
            "Epoch 31/50\n",
            "24/24 [==============================] - 1s 47ms/step - loss: 7.1657\n",
            "Epoch 32/50\n",
            "24/24 [==============================] - 1s 48ms/step - loss: 7.3901\n",
            "Epoch 33/50\n",
            "24/24 [==============================] - 1s 46ms/step - loss: 7.1056\n",
            "Epoch 34/50\n",
            "24/24 [==============================] - 1s 46ms/step - loss: 6.7851\n",
            "Epoch 35/50\n",
            "24/24 [==============================] - 1s 47ms/step - loss: 6.9497\n",
            "Epoch 36/50\n",
            "24/24 [==============================] - 1s 48ms/step - loss: 7.1661\n",
            "Epoch 37/50\n",
            "24/24 [==============================] - 1s 52ms/step - loss: 6.9567\n",
            "Epoch 38/50\n",
            "24/24 [==============================] - 1s 50ms/step - loss: 6.6468\n",
            "Epoch 39/50\n",
            "24/24 [==============================] - 1s 52ms/step - loss: 6.6099\n",
            "Epoch 40/50\n",
            "24/24 [==============================] - 1s 52ms/step - loss: 6.8426\n",
            "Epoch 41/50\n",
            "24/24 [==============================] - 1s 52ms/step - loss: 6.6227\n",
            "Epoch 42/50\n",
            "24/24 [==============================] - 1s 50ms/step - loss: 6.7504\n",
            "Epoch 43/50\n",
            "24/24 [==============================] - 1s 45ms/step - loss: 6.6882\n",
            "Epoch 44/50\n",
            "24/24 [==============================] - 1s 50ms/step - loss: 6.9185\n",
            "Epoch 45/50\n",
            "24/24 [==============================] - 1s 47ms/step - loss: 6.6889\n",
            "Epoch 46/50\n",
            "24/24 [==============================] - 1s 49ms/step - loss: 6.8964\n",
            "Epoch 47/50\n",
            "24/24 [==============================] - 1s 50ms/step - loss: 6.5810\n",
            "Epoch 48/50\n",
            "24/24 [==============================] - 1s 54ms/step - loss: 6.8789\n",
            "Epoch 49/50\n",
            "24/24 [==============================] - 1s 48ms/step - loss: 6.5927\n",
            "Epoch 50/50\n",
            "24/24 [==============================] - 1s 49ms/step - loss: 6.5507\n",
            "WARNING:tensorflow:5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7fd477e34440> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:tensorflow:5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7fd477e34440> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Template Eval Error: ValueError('Model DatepartRegression returned NaN for one or more series. fail_on_forecast_nan=True') in model 448: DatepartRegression\n",
            "Model Number: 449 with model DatepartRegression in generation 5 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 449: DatepartRegression\n",
            "Model Number: 450 with model DatepartRegression in generation 5 of 10\n",
            "Model Number: 451 with model LastValueNaive in generation 5 of 10\n",
            "Model Number: 452 with model LastValueNaive in generation 5 of 10\n",
            "Model Number: 453 with model LastValueNaive in generation 5 of 10\n",
            "Model Number: 454 with model AverageValueNaive in generation 5 of 10\n",
            "Model Number: 455 with model AverageValueNaive in generation 5 of 10\n",
            "Model Number: 456 with model AverageValueNaive in generation 5 of 10\n",
            "Model Number: 457 with model UnobservedComponents in generation 5 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 457: UnobservedComponents\n",
            "Model Number: 458 with model UnobservedComponents in generation 5 of 10\n",
            "Template Eval Error: ValueError('Model UnobservedComponents returned NaN for one or more series. fail_on_forecast_nan=True') in model 458: UnobservedComponents\n",
            "Model Number: 459 with model UnobservedComponents in generation 5 of 10\n",
            "Model Number: 460 with model MultivariateRegression in generation 5 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.4s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 461 with model MultivariateRegression in generation 5 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.4s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 462 with model MultivariateRegression in generation 5 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 462: MultivariateRegression\n",
            "Model Number: 463 with model MultivariateRegression in generation 5 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.6s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 464 with model ETS in generation 5 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 465 with model ETS in generation 5 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "ETS failed on Close with ValueError('endog must be strictly positive when using multiplicative trend or seasonal components.')\n",
            "Model Number: 466 with model ETS in generation 5 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 467 with model ETS in generation 5 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "ETS failed on Close with ValueError('endog must be strictly positive when using multiplicative trend or seasonal components.')\n",
            "Model Number: 468 with model SeasonalNaive in generation 5 of 10\n",
            "Model Number: 469 with model SeasonalNaive in generation 5 of 10\n",
            "Model Number: 470 with model SeasonalNaive in generation 5 of 10\n",
            "Model Number: 471 with model SeasonalNaive in generation 5 of 10\n",
            "Model Number: 472 with model MultivariateMotif in generation 5 of 10\n",
            "Model Number: 473 with model MultivariateMotif in generation 5 of 10\n",
            "Model Number: 474 with model MultivariateMotif in generation 5 of 10\n",
            "Model Number: 475 with model MultivariateMotif in generation 5 of 10\n",
            "Model Number: 476 with model GLS in generation 5 of 10\n",
            "Model Number: 477 with model GLS in generation 5 of 10\n",
            "Model Number: 478 with model GLS in generation 5 of 10\n",
            "Model Number: 479 with model ConstantNaive in generation 5 of 10\n",
            "Model Number: 480 with model ConstantNaive in generation 5 of 10\n",
            "Model Number: 481 with model ConstantNaive in generation 5 of 10\n",
            "Model Number: 482 with model FBProphet in generation 5 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 483 with model FBProphet in generation 5 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 484 with model FBProphet in generation 5 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 485 with model FBProphet in generation 5 of 10\n",
            "Model Number: 486 with model UnivariateMotif in generation 5 of 10\n",
            "Model Number: 487 with model UnivariateMotif in generation 5 of 10\n",
            "Model Number: 488 with model UnivariateMotif in generation 5 of 10\n",
            "Model Number: 489 with model UnivariateMotif in generation 5 of 10\n",
            "Model Number: 490 with model GLM in generation 5 of 10\n",
            "Template Eval Error: ValueError('regression_type=user and no future_regressor passed') in model 490: GLM\n",
            "Model Number: 491 with model GLM in generation 5 of 10\n",
            "Model Number: 492 with model GLM in generation 5 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 492: GLM\n",
            "Model Number: 493 with model GLM in generation 5 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/genmod/families/family.py:1440: RuntimeWarning: invalid value encountered in log\n",
            "  endog * np.log(endog / mu) + (mu - endog))\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 494 with model VAR in generation 5 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 494: VAR\n",
            "Model Number: 495 with model VAR in generation 5 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 495: VAR\n",
            "Model Number: 496 with model VAR in generation 5 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 496: VAR\n",
            "Model Number: 497 with model VAR in generation 5 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 497: VAR\n",
            "Model Number: 498 with model VECM in generation 5 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 498: VECM\n",
            "Model Number: 499 with model VECM in generation 5 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 499: VECM\n",
            "Model Number: 500 with model VECM in generation 5 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 500: VECM\n",
            "Model Number: 501 with model VECM in generation 5 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 501: VECM\n",
            "Model Number: 502 with model ARDL in generation 5 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 502: ARDL\n",
            "Model Number: 503 with model ARDL in generation 5 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 503: ARDL\n",
            "Model Number: 504 with model ARDL in generation 5 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 504: ARDL\n",
            "Model Number: 505 with model ARDL in generation 5 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 505: ARDL\n",
            "Model Number: 506 with model Theta in generation 5 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 506: Theta\n",
            "Model Number: 507 with model Theta in generation 5 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 507: Theta\n",
            "Model Number: 508 with model Theta in generation 5 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 508: Theta\n",
            "Model Number: 509 with model Theta in generation 5 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 509: Theta\n",
            "New Generation: 6 of 10\n",
            "Model Number: 510 with model NVAR in generation 6 of 10\n",
            "Model Number: 511 with model NVAR in generation 6 of 10\n",
            "Model Number: 512 with model NVAR in generation 6 of 10\n",
            "Model Number: 513 with model NVAR in generation 6 of 10\n",
            "Model Number: 514 with model SectionalMotif in generation 6 of 10\n",
            "Model Number: 515 with model SectionalMotif in generation 6 of 10\n",
            "Model Number: 516 with model SectionalMotif in generation 6 of 10\n",
            "Model Number: 517 with model SectionalMotif in generation 6 of 10\n",
            "Model Number: 518 with model WindowRegression in generation 6 of 10\n",
            "Model Number: 519 with model WindowRegression in generation 6 of 10\n",
            "Model Number: 520 with model WindowRegression in generation 6 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 521 with model DatepartRegression in generation 6 of 10\n",
            "Epoch 1/50\n",
            "Template Eval Error: TypeError('in user code:\\n\\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1021, in train_function  *\\n        return step_function(self, iterator)\\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1010, in step_function  **\\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1000, in run_step  **\\n        outputs = model.train_step(data)\\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 859, in train_step\\n        y_pred = self(x, training=True)\\n    File \"/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\", line 67, in error_handler\\n        raise e.with_traceback(filtered_tb) from None\\n\\n    TypeError: Exception encountered when calling layer \"residual_wrapper\" (type ResidualWrapper).\\n    \\n    in user code:\\n    \\n        File \"/usr/local/lib/python3.7/dist-packages/autots/models/dnn.py\", line 31, in call  *\\n            return inputs + delta\\n    \\n        TypeError: Input \\'y\\' of \\'AddV2\\' Op has type float32 that does not match type int64 of argument \\'x\\'.\\n    \\n    \\n    Call arguments received:\\n      • inputs=tf.Tensor(shape=(None, 1, 4), dtype=int64)\\n      • args=<class \\'inspect._empty\\'>\\n      • kwargs={\\'training\\': \\'True\\'}\\n') in model 521: DatepartRegression\n",
            "Model Number: 522 with model DatepartRegression in generation 6 of 10\n",
            "Model Number: 523 with model DatepartRegression in generation 6 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 523: DatepartRegression\n",
            "Model Number: 524 with model LastValueNaive in generation 6 of 10\n",
            "Model Number: 525 with model LastValueNaive in generation 6 of 10\n",
            "Model Number: 526 with model LastValueNaive in generation 6 of 10\n",
            "Model Number: 527 with model AverageValueNaive in generation 6 of 10\n",
            "Model Number: 528 with model AverageValueNaive in generation 6 of 10\n",
            "Model Number: 529 with model AverageValueNaive in generation 6 of 10\n",
            "Model Number: 530 with model MultivariateRegression in generation 6 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.4s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 531 with model MultivariateRegression in generation 6 of 10\n",
            "Model Number: 532 with model MultivariateRegression in generation 6 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.4s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 533 with model MultivariateRegression in generation 6 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.5s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 534 with model UnobservedComponents in generation 6 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 534: UnobservedComponents\n",
            "Model Number: 535 with model UnobservedComponents in generation 6 of 10\n",
            "Model Number: 536 with model UnobservedComponents in generation 6 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor supplied\") in model 536: UnobservedComponents\n",
            "Model Number: 537 with model ETS in generation 6 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 538 with model ETS in generation 6 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 539 with model ETS in generation 6 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 540 with model SeasonalNaive in generation 6 of 10\n",
            "Model Number: 541 with model SeasonalNaive in generation 6 of 10\n",
            "Model Number: 542 with model SeasonalNaive in generation 6 of 10\n",
            "Model Number: 543 with model SeasonalNaive in generation 6 of 10\n",
            "Model Number: 544 with model MultivariateMotif in generation 6 of 10\n",
            "Model Number: 545 with model MultivariateMotif in generation 6 of 10\n",
            "Model Number: 546 with model MultivariateMotif in generation 6 of 10\n",
            "Model Number: 547 with model MultivariateMotif in generation 6 of 10\n",
            "Model Number: 548 with model GLS in generation 6 of 10\n",
            "Model Number: 549 with model GLS in generation 6 of 10\n",
            "Model Number: 550 with model GLS in generation 6 of 10\n",
            "Model Number: 551 with model ConstantNaive in generation 6 of 10\n",
            "Model Number: 552 with model ConstantNaive in generation 6 of 10\n",
            "Model Number: 553 with model ConstantNaive in generation 6 of 10\n",
            "Model Number: 554 with model FBProphet in generation 6 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 29.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 555 with model FBProphet in generation 6 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 556 with model FBProphet in generation 6 of 10\n",
            "Model Number: 557 with model FBProphet in generation 6 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 557: FBProphet\n",
            "Model Number: 558 with model UnivariateMotif in generation 6 of 10\n",
            "Model Number: 559 with model UnivariateMotif in generation 6 of 10\n",
            "Model Number: 560 with model UnivariateMotif in generation 6 of 10\n",
            "Model Number: 561 with model UnivariateMotif in generation 6 of 10\n",
            "Model Number: 562 with model GLM in generation 6 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 562: GLM\n",
            "Model Number: 563 with model GLM in generation 6 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 563: GLM\n",
            "Model Number: 564 with model GLM in generation 6 of 10\n",
            "Template Eval Error: TypeError(\"ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\") in model 564: GLM\n",
            "Model Number: 565 with model VAR in generation 6 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 565: VAR\n",
            "Model Number: 566 with model VAR in generation 6 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 566: VAR\n",
            "Model Number: 567 with model VAR in generation 6 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 567: VAR\n",
            "Model Number: 568 with model VAR in generation 6 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 568: VAR\n",
            "Model Number: 569 with model VECM in generation 6 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 569: VECM\n",
            "Model Number: 570 with model VECM in generation 6 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 570: VECM\n",
            "Model Number: 571 with model VECM in generation 6 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 571: VECM\n",
            "Model Number: 572 with model VECM in generation 6 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 572: VECM\n",
            "Model Number: 573 with model ARDL in generation 6 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 573: ARDL\n",
            "Model Number: 574 with model ARDL in generation 6 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 574: ARDL\n",
            "Model Number: 575 with model ARDL in generation 6 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 575: ARDL\n",
            "Model Number: 576 with model ARDL in generation 6 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 576: ARDL\n",
            "Model Number: 577 with model Theta in generation 6 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 577: Theta\n",
            "Model Number: 578 with model Theta in generation 6 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 578: Theta\n",
            "Model Number: 579 with model Theta in generation 6 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 579: Theta\n",
            "Model Number: 580 with model Theta in generation 6 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 580: Theta\n",
            "New Generation: 7 of 10\n",
            "Model Number: 581 with model NVAR in generation 7 of 10\n",
            "Template Eval Error: Exception('Transformer MinMaxScaler failed on inverse') in model 581: NVAR\n",
            "Model Number: 582 with model NVAR in generation 7 of 10\n",
            "Model Number: 583 with model NVAR in generation 7 of 10\n",
            "Model Number: 584 with model NVAR in generation 7 of 10\n",
            "Model Number: 585 with model SectionalMotif in generation 7 of 10\n",
            "Model Number: 586 with model SectionalMotif in generation 7 of 10\n",
            "Model Number: 587 with model SectionalMotif in generation 7 of 10\n",
            "Model Number: 588 with model SectionalMotif in generation 7 of 10\n",
            "Model Number: 589 with model WindowRegression in generation 7 of 10\n",
            "Template Eval Error: ValueError('RANSAC could not find a valid consensus set. All `max_trials` iterations were skipped because each randomly chosen sub-sample failed the passing criteria. See estimator attributes for diagnostics (n_skips*).') in model 589: WindowRegression\n",
            "Model Number: 590 with model WindowRegression in generation 7 of 10\n",
            "Model Number: 591 with model WindowRegression in generation 7 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 592 with model DatepartRegression in generation 7 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 593 with model DatepartRegression in generation 7 of 10\n",
            "Model Number: 594 with model DatepartRegression in generation 7 of 10\n",
            "Epoch 1/100\n",
            "24/24 [==============================] - 10s 44ms/step - loss: 6.4870\n",
            "Epoch 2/100\n",
            "24/24 [==============================] - 1s 45ms/step - loss: 1.1048\n",
            "Epoch 3/100\n",
            "24/24 [==============================] - 1s 45ms/step - loss: 0.6531\n",
            "Epoch 4/100\n",
            "24/24 [==============================] - 1s 43ms/step - loss: 0.4615\n",
            "Epoch 5/100\n",
            "24/24 [==============================] - 1s 47ms/step - loss: 0.9179\n",
            "Epoch 6/100\n",
            "24/24 [==============================] - 1s 44ms/step - loss: 0.6575\n",
            "Epoch 7/100\n",
            "24/24 [==============================] - 1s 45ms/step - loss: 0.6713\n",
            "Epoch 8/100\n",
            "24/24 [==============================] - 1s 41ms/step - loss: 0.4994\n",
            "Epoch 9/100\n",
            "24/24 [==============================] - 1s 41ms/step - loss: 0.3269\n",
            "Epoch 10/100\n",
            "24/24 [==============================] - 1s 40ms/step - loss: 0.4962\n",
            "Epoch 11/100\n",
            "24/24 [==============================] - 1s 48ms/step - loss: 0.3636\n",
            "Epoch 12/100\n",
            "24/24 [==============================] - 1s 44ms/step - loss: 0.6360\n",
            "Epoch 13/100\n",
            "24/24 [==============================] - 1s 24ms/step - loss: 0.4350\n",
            "Epoch 14/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2005\n",
            "Epoch 15/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.4701\n",
            "Epoch 16/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.6293\n",
            "Epoch 17/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2418\n",
            "Epoch 18/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2137\n",
            "Epoch 19/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.4160\n",
            "Epoch 20/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2909\n",
            "Epoch 21/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.3038\n",
            "Epoch 22/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.3165\n",
            "Epoch 23/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.4464\n",
            "Epoch 24/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2393\n",
            "Epoch 25/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2163\n",
            "Epoch 26/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.3104\n",
            "Epoch 27/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2825\n",
            "Epoch 28/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.3650\n",
            "Epoch 29/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.3539\n",
            "Epoch 30/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.4150\n",
            "Epoch 31/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.3311\n",
            "Epoch 32/100\n",
            "24/24 [==============================] - 1s 23ms/step - loss: 0.3375\n",
            "Epoch 33/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.4774\n",
            "Epoch 34/100\n",
            "24/24 [==============================] - 1s 23ms/step - loss: 0.2441\n",
            "Epoch 35/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.4974\n",
            "Epoch 36/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.3538\n",
            "Epoch 37/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.1955\n",
            "Epoch 38/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2119\n",
            "Epoch 39/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2311\n",
            "Epoch 40/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2093\n",
            "Epoch 41/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2490\n",
            "Epoch 42/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2962\n",
            "Epoch 43/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2902\n",
            "Epoch 44/100\n",
            "24/24 [==============================] - 0s 21ms/step - loss: 0.2238\n",
            "Epoch 45/100\n",
            "24/24 [==============================] - 1s 26ms/step - loss: 0.2130\n",
            "Epoch 46/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.1611\n",
            "Epoch 47/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.3984\n",
            "Epoch 48/100\n",
            "24/24 [==============================] - 0s 20ms/step - loss: 0.3429\n",
            "Epoch 49/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.1839\n",
            "Epoch 50/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2411\n",
            "Epoch 51/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2347\n",
            "Epoch 52/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.3356\n",
            "Epoch 53/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2171\n",
            "Epoch 54/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2092\n",
            "Epoch 55/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2942\n",
            "Epoch 56/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.1689\n",
            "Epoch 57/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.1942\n",
            "Epoch 58/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2764\n",
            "Epoch 59/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2303\n",
            "Epoch 60/100\n",
            "24/24 [==============================] - 1s 23ms/step - loss: 0.3986\n",
            "Epoch 61/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.4841\n",
            "Epoch 62/100\n",
            "24/24 [==============================] - 1s 23ms/step - loss: 0.3237\n",
            "Epoch 63/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2085\n",
            "Epoch 64/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.1952\n",
            "Epoch 65/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2322\n",
            "Epoch 66/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2226\n",
            "Epoch 67/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2797\n",
            "Epoch 68/100\n",
            "24/24 [==============================] - 1s 23ms/step - loss: 0.1581\n",
            "Epoch 69/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.1838\n",
            "Epoch 70/100\n",
            "24/24 [==============================] - 1s 23ms/step - loss: 0.1913\n",
            "Epoch 71/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.4380\n",
            "Epoch 72/100\n",
            "24/24 [==============================] - 1s 23ms/step - loss: 0.2807\n",
            "Epoch 73/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.3866\n",
            "Epoch 74/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.3041\n",
            "Epoch 75/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.1440\n",
            "Epoch 76/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2099\n",
            "Epoch 77/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.1754\n",
            "Epoch 78/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2265\n",
            "Epoch 79/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2668\n",
            "Epoch 80/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.1486\n",
            "Epoch 81/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2210\n",
            "Epoch 82/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.1419\n",
            "Epoch 83/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.1764\n",
            "Epoch 84/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2392\n",
            "Epoch 85/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.1813\n",
            "Epoch 86/100\n",
            "24/24 [==============================] - 0s 20ms/step - loss: 0.2754\n",
            "Epoch 87/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2408\n",
            "Epoch 88/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.1620\n",
            "Epoch 89/100\n",
            "24/24 [==============================] - 1s 23ms/step - loss: 0.1677\n",
            "Epoch 90/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.1885\n",
            "Epoch 91/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.2922\n",
            "Epoch 92/100\n",
            "24/24 [==============================] - 0s 20ms/step - loss: 0.3471\n",
            "Epoch 93/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.3482\n",
            "Epoch 94/100\n",
            "24/24 [==============================] - 1s 21ms/step - loss: 0.3918\n",
            "Epoch 95/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2445\n",
            "Epoch 96/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.2955\n",
            "Epoch 97/100\n",
            "24/24 [==============================] - 1s 23ms/step - loss: 0.1668\n",
            "Epoch 98/100\n",
            "24/24 [==============================] - 1s 22ms/step - loss: 0.1672\n",
            "Epoch 99/100\n",
            "24/24 [==============================] - 1s 24ms/step - loss: 0.2270\n",
            "Epoch 100/100\n",
            "24/24 [==============================] - 1s 23ms/step - loss: 0.1792\n",
            "WARNING:tensorflow:6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7fd4711e37a0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:tensorflow:6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7fd4711e37a0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Template Eval Error: ValueError('Model DatepartRegression returned NaN for one or more series. fail_on_forecast_nan=True') in model 594: DatepartRegression\n",
            "Model Number: 595 with model LastValueNaive in generation 7 of 10\n",
            "Model Number: 596 with model LastValueNaive in generation 7 of 10\n",
            "Model Number: 597 with model LastValueNaive in generation 7 of 10\n",
            "Model Number: 598 with model UnivariateMotif in generation 7 of 10\n",
            "Model Number: 599 with model UnivariateMotif in generation 7 of 10\n",
            "Model Number: 600 with model UnivariateMotif in generation 7 of 10\n",
            "Model Number: 601 with model UnivariateMotif in generation 7 of 10\n",
            "Model Number: 602 with model AverageValueNaive in generation 7 of 10\n",
            "Model Number: 603 with model AverageValueNaive in generation 7 of 10\n",
            "Model Number: 604 with model AverageValueNaive in generation 7 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 604: AverageValueNaive\n",
            "Model Number: 605 with model MultivariateRegression in generation 7 of 10\n",
            "Model Number: 606 with model MultivariateRegression in generation 7 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 607 with model MultivariateRegression in generation 7 of 10\n",
            "Model Number: 608 with model MultivariateRegression in generation 7 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 609 with model UnobservedComponents in generation 7 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 609: UnobservedComponents\n",
            "Model Number: 610 with model UnobservedComponents in generation 7 of 10\n",
            "Model Number: 611 with model UnobservedComponents in generation 7 of 10\n",
            "Model Number: 612 with model ETS in generation 7 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 613 with model ETS in generation 7 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 614 with model ETS in generation 7 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 615 with model ETS in generation 7 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 616 with model SeasonalNaive in generation 7 of 10\n",
            "Model Number: 617 with model SeasonalNaive in generation 7 of 10\n",
            "Model Number: 618 with model SeasonalNaive in generation 7 of 10\n",
            "Model Number: 619 with model MultivariateMotif in generation 7 of 10\n",
            "Model Number: 620 with model MultivariateMotif in generation 7 of 10\n",
            "Model Number: 621 with model MultivariateMotif in generation 7 of 10\n",
            "Model Number: 622 with model MultivariateMotif in generation 7 of 10\n",
            "Model Number: 623 with model GLS in generation 7 of 10\n",
            "Model Number: 624 with model GLS in generation 7 of 10\n",
            "Model Number: 625 with model FBProphet in generation 7 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor passed\") in model 625: FBProphet\n",
            "Model Number: 626 with model FBProphet in generation 7 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 627 with model FBProphet in generation 7 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 628 with model FBProphet in generation 7 of 10\n",
            "Model Number: 629 with model ConstantNaive in generation 7 of 10\n",
            "Model Number: 630 with model ConstantNaive in generation 7 of 10\n",
            "Model Number: 631 with model ConstantNaive in generation 7 of 10\n",
            "Model Number: 632 with model GLM in generation 7 of 10\n",
            "Model Number: 633 with model GLM in generation 7 of 10\n",
            "Model Number: 634 with model VAR in generation 7 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 634: VAR\n",
            "Model Number: 635 with model VAR in generation 7 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 635: VAR\n",
            "Model Number: 636 with model VAR in generation 7 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 636: VAR\n",
            "Model Number: 637 with model VAR in generation 7 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 637: VAR\n",
            "Model Number: 638 with model VECM in generation 7 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 638: VECM\n",
            "Model Number: 639 with model VECM in generation 7 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 639: VECM\n",
            "Model Number: 640 with model VECM in generation 7 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/genmod/families/links.py:190: RuntimeWarning: overflow encountered in exp\n",
            "  t = np.exp(-z)\n",
            "/usr/local/lib/python3.7/dist-packages/statsmodels/genmod/families/family.py:889: RuntimeWarning: divide by zero encountered in true_divide\n",
            "  endog_mu = self._clean(endog / mu)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Template Eval Error: ValueError(\"regression_type='User' but no future_regressor supplied\") in model 640: VECM\n",
            "Model Number: 641 with model VECM in generation 7 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 641: VECM\n",
            "Model Number: 642 with model ARDL in generation 7 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 642: ARDL\n",
            "Model Number: 643 with model ARDL in generation 7 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 643: ARDL\n",
            "Model Number: 644 with model ARDL in generation 7 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 644: ARDL\n",
            "Model Number: 645 with model ARDL in generation 7 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 645: ARDL\n",
            "Model Number: 646 with model Theta in generation 7 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 646: Theta\n",
            "Model Number: 647 with model Theta in generation 7 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 647: Theta\n",
            "Model Number: 648 with model Theta in generation 7 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 648: Theta\n",
            "Model Number: 649 with model Theta in generation 7 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 649: Theta\n",
            "New Generation: 8 of 10\n",
            "Model Number: 650 with model NVAR in generation 8 of 10\n",
            "Model Number: 651 with model NVAR in generation 8 of 10\n",
            "Model Number: 652 with model NVAR in generation 8 of 10\n",
            "Model Number: 653 with model NVAR in generation 8 of 10\n",
            "Model Number: 654 with model SectionalMotif in generation 8 of 10\n",
            "Model Number: 655 with model SectionalMotif in generation 8 of 10\n",
            "Model Number: 656 with model SectionalMotif in generation 8 of 10\n",
            "Model Number: 657 with model SectionalMotif in generation 8 of 10\n",
            "Model Number: 658 with model WindowRegression in generation 8 of 10\n",
            "Model Number: 659 with model WindowRegression in generation 8 of 10\n",
            "Epoch 1/50\n",
            "2/2 [==============================] - 6s 876ms/step - loss: 95.6030 - val_loss: 90.7888\n",
            "Epoch 2/50\n",
            "2/2 [==============================] - 1s 329ms/step - loss: 96.9247 - val_loss: 90.2062\n",
            "Epoch 3/50\n",
            "2/2 [==============================] - 1s 333ms/step - loss: 94.0104 - val_loss: 89.6254\n",
            "Epoch 4/50\n",
            "2/2 [==============================] - 1s 346ms/step - loss: 92.7781 - val_loss: 89.0480\n",
            "Epoch 5/50\n",
            "2/2 [==============================] - 1s 330ms/step - loss: 92.3475 - val_loss: 88.4728\n",
            "Epoch 6/50\n",
            "2/2 [==============================] - 1s 335ms/step - loss: 94.2592 - val_loss: 87.9032\n",
            "Epoch 7/50\n",
            "2/2 [==============================] - 1s 345ms/step - loss: 93.4054 - val_loss: 87.3356\n",
            "Epoch 8/50\n",
            "2/2 [==============================] - 1s 326ms/step - loss: 91.3205 - val_loss: 86.7692\n",
            "Epoch 9/50\n",
            "2/2 [==============================] - 1s 339ms/step - loss: 92.7603 - val_loss: 86.2051\n",
            "Epoch 10/50\n",
            "2/2 [==============================] - 1s 345ms/step - loss: 91.9672 - val_loss: 85.6450\n",
            "Epoch 11/50\n",
            "2/2 [==============================] - 1s 346ms/step - loss: 91.6718 - val_loss: 85.0880\n",
            "Epoch 12/50\n",
            "2/2 [==============================] - 1s 337ms/step - loss: 87.6218 - val_loss: 84.5359\n",
            "Epoch 13/50\n",
            "2/2 [==============================] - 1s 342ms/step - loss: 91.7741 - val_loss: 83.9924\n",
            "Epoch 14/50\n",
            "2/2 [==============================] - 1s 333ms/step - loss: 87.5036 - val_loss: 83.4539\n",
            "Epoch 15/50\n",
            "2/2 [==============================] - 1s 345ms/step - loss: 90.4762 - val_loss: 82.9191\n",
            "Epoch 16/50\n",
            "2/2 [==============================] - 1s 333ms/step - loss: 87.1049 - val_loss: 82.3863\n",
            "Epoch 17/50\n",
            "2/2 [==============================] - 1s 326ms/step - loss: 92.7028 - val_loss: 81.8594\n",
            "Epoch 18/50\n",
            "2/2 [==============================] - 1s 354ms/step - loss: 89.2409 - val_loss: 81.3365\n",
            "Epoch 19/50\n",
            "2/2 [==============================] - 1s 343ms/step - loss: 88.0788 - val_loss: 80.8175\n",
            "Epoch 20/50\n",
            "2/2 [==============================] - 1s 333ms/step - loss: 85.6378 - val_loss: 80.3021\n",
            "Epoch 21/50\n",
            "2/2 [==============================] - 1s 341ms/step - loss: 87.2961 - val_loss: 79.7878\n",
            "Epoch 22/50\n",
            "2/2 [==============================] - 1s 337ms/step - loss: 85.8190 - val_loss: 79.2750\n",
            "Epoch 23/50\n",
            "2/2 [==============================] - 1s 338ms/step - loss: 83.0268 - val_loss: 78.7661\n",
            "Epoch 24/50\n",
            "2/2 [==============================] - 1s 342ms/step - loss: 83.3221 - val_loss: 78.2569\n",
            "Epoch 25/50\n",
            "2/2 [==============================] - 1s 347ms/step - loss: 83.4496 - val_loss: 77.7492\n",
            "Epoch 26/50\n",
            "2/2 [==============================] - 1s 340ms/step - loss: 84.0982 - val_loss: 77.2460\n",
            "Epoch 27/50\n",
            "2/2 [==============================] - 1s 359ms/step - loss: 83.8993 - val_loss: 76.7471\n",
            "Epoch 28/50\n",
            "2/2 [==============================] - 1s 341ms/step - loss: 83.2515 - val_loss: 76.2563\n",
            "Epoch 29/50\n",
            "2/2 [==============================] - 1s 329ms/step - loss: 82.5196 - val_loss: 75.7777\n",
            "Epoch 30/50\n",
            "2/2 [==============================] - 1s 339ms/step - loss: 82.0512 - val_loss: 75.3035\n",
            "Epoch 31/50\n",
            "2/2 [==============================] - 1s 343ms/step - loss: 83.0716 - val_loss: 74.8295\n",
            "Epoch 32/50\n",
            "2/2 [==============================] - 1s 335ms/step - loss: 78.8920 - val_loss: 74.3545\n",
            "Epoch 33/50\n",
            "2/2 [==============================] - 1s 340ms/step - loss: 79.3016 - val_loss: 73.8816\n",
            "Epoch 34/50\n",
            "2/2 [==============================] - 1s 347ms/step - loss: 79.6909 - val_loss: 73.4114\n",
            "Epoch 35/50\n",
            "2/2 [==============================] - 1s 336ms/step - loss: 80.0176 - val_loss: 72.9495\n",
            "Epoch 36/50\n",
            "2/2 [==============================] - 1s 344ms/step - loss: 78.4241 - val_loss: 72.4912\n",
            "Epoch 37/50\n",
            "2/2 [==============================] - 1s 810ms/step - loss: 78.7012 - val_loss: 72.0420\n",
            "Epoch 38/50\n",
            "2/2 [==============================] - 1s 334ms/step - loss: 81.2263 - val_loss: 71.5991\n",
            "Epoch 39/50\n",
            "2/2 [==============================] - 1s 337ms/step - loss: 79.9828 - val_loss: 71.1646\n",
            "Epoch 40/50\n",
            "2/2 [==============================] - 1s 337ms/step - loss: 75.3030 - val_loss: 70.7345\n",
            "Epoch 41/50\n",
            "2/2 [==============================] - 1s 332ms/step - loss: 77.5539 - val_loss: 70.3116\n",
            "Epoch 42/50\n",
            "2/2 [==============================] - 1s 338ms/step - loss: 76.9705 - val_loss: 69.8918\n",
            "Epoch 43/50\n",
            "2/2 [==============================] - 1s 345ms/step - loss: 77.1422 - val_loss: 69.4788\n",
            "Epoch 44/50\n",
            "2/2 [==============================] - 1s 331ms/step - loss: 77.5022 - val_loss: 69.0678\n",
            "Epoch 45/50\n",
            "2/2 [==============================] - 1s 338ms/step - loss: 80.7605 - val_loss: 68.6632\n",
            "Epoch 46/50\n",
            "2/2 [==============================] - 1s 347ms/step - loss: 75.3680 - val_loss: 68.2690\n",
            "Epoch 47/50\n",
            "2/2 [==============================] - 1s 338ms/step - loss: 74.5463 - val_loss: 67.8873\n",
            "Epoch 48/50\n",
            "2/2 [==============================] - 1s 333ms/step - loss: 75.4330 - val_loss: 67.5145\n",
            "Epoch 49/50\n",
            "2/2 [==============================] - 1s 347ms/step - loss: 78.9170 - val_loss: 67.1464\n",
            "Epoch 50/50\n",
            "2/2 [==============================] - 1s 340ms/step - loss: 75.5386 - val_loss: 66.7823\n",
            "Model Number: 660 with model WindowRegression in generation 8 of 10\n",
            "Model Number: 661 with model DatepartRegression in generation 8 of 10\n",
            "Model Number: 662 with model DatepartRegression in generation 8 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 663 with model DatepartRegression in generation 8 of 10\n",
            "Model Number: 664 with model LastValueNaive in generation 8 of 10\n",
            "Model Number: 665 with model LastValueNaive in generation 8 of 10\n",
            "Model Number: 666 with model LastValueNaive in generation 8 of 10\n",
            "Model Number: 667 with model UnivariateMotif in generation 8 of 10\n",
            "Model Number: 668 with model UnivariateMotif in generation 8 of 10\n",
            "Model Number: 669 with model UnivariateMotif in generation 8 of 10\n",
            "Model Number: 670 with model UnivariateMotif in generation 8 of 10\n",
            "Model Number: 671 with model AverageValueNaive in generation 8 of 10\n",
            "Model Number: 672 with model AverageValueNaive in generation 8 of 10\n",
            "Model Number: 673 with model AverageValueNaive in generation 8 of 10\n",
            "Model Number: 674 with model MultivariateRegression in generation 8 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 675 with model MultivariateRegression in generation 8 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 675: MultivariateRegression\n",
            "Model Number: 676 with model MultivariateRegression in generation 8 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 676: MultivariateRegression\n",
            "Model Number: 677 with model MultivariateRegression in generation 8 of 10\n",
            "Epoch 1/100\n",
            "Template Eval Error: InvalidArgumentError() in model 677: MultivariateRegression\n",
            "Model Number: 678 with model UnobservedComponents in generation 8 of 10\n",
            "Model Number: 679 with model UnobservedComponents in generation 8 of 10\n",
            "Model Number: 680 with model UnobservedComponents in generation 8 of 10\n",
            "Model Number: 681 with model ETS in generation 8 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 682 with model ETS in generation 8 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 683 with model ETS in generation 8 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "ETS failed on Close with ValueError('endog must be strictly positive when using multiplicative trend or seasonal components.')\n",
            "Model Number: 684 with model ETS in generation 8 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 685 with model SeasonalNaive in generation 8 of 10\n",
            "Model Number: 686 with model SeasonalNaive in generation 8 of 10\n",
            "Model Number: 687 with model SeasonalNaive in generation 8 of 10\n",
            "Model Number: 688 with model SeasonalNaive in generation 8 of 10\n",
            "Model Number: 689 with model MultivariateMotif in generation 8 of 10\n",
            "Model Number: 690 with model MultivariateMotif in generation 8 of 10\n",
            "Model Number: 691 with model MultivariateMotif in generation 8 of 10\n",
            "Model Number: 692 with model MultivariateMotif in generation 8 of 10\n",
            "Model Number: 693 with model GLS in generation 8 of 10\n",
            "Model Number: 694 with model GLS in generation 8 of 10\n",
            "Model Number: 695 with model GLS in generation 8 of 10\n",
            "Model Number: 696 with model ConstantNaive in generation 8 of 10\n",
            "Model Number: 697 with model ConstantNaive in generation 8 of 10\n",
            "Model Number: 698 with model ConstantNaive in generation 8 of 10\n",
            "Model Number: 699 with model FBProphet in generation 8 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 700 with model FBProphet in generation 8 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 701 with model FBProphet in generation 8 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 702 with model FBProphet in generation 8 of 10\n",
            "Model Number: 703 with model GLM in generation 8 of 10\n",
            "Model Number: 704 with model GLM in generation 8 of 10\n",
            "Model Number: 705 with model GLM in generation 8 of 10\n",
            "Model Number: 706 with model VAR in generation 8 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 706: VAR\n",
            "Model Number: 707 with model VAR in generation 8 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 707: VAR\n",
            "Model Number: 708 with model VAR in generation 8 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 708: VAR\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/genmod/families/family.py:890: RuntimeWarning: divide by zero encountered in true_divide\n",
            "  n_endog_mu = self._clean((1. - endog) / (1. - mu))\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 709 with model VAR in generation 8 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 709: VAR\n",
            "Model Number: 710 with model VECM in generation 8 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 710: VECM\n",
            "Model Number: 711 with model VECM in generation 8 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 711: VECM\n",
            "Model Number: 712 with model VECM in generation 8 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 712: VECM\n",
            "Model Number: 713 with model VECM in generation 8 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 713: VECM\n",
            "Model Number: 714 with model ARDL in generation 8 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 714: ARDL\n",
            "Model Number: 715 with model ARDL in generation 8 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 715: ARDL\n",
            "Model Number: 716 with model ARDL in generation 8 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 716: ARDL\n",
            "Model Number: 717 with model ARDL in generation 8 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 717: ARDL\n",
            "Model Number: 718 with model Theta in generation 8 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 718: Theta\n",
            "Model Number: 719 with model Theta in generation 8 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 719: Theta\n",
            "Model Number: 720 with model Theta in generation 8 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 720: Theta\n",
            "Model Number: 721 with model Theta in generation 8 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 721: Theta\n",
            "New Generation: 9 of 10\n",
            "Model Number: 722 with model NVAR in generation 9 of 10\n",
            "Model Number: 723 with model NVAR in generation 9 of 10\n",
            "Model Number: 724 with model NVAR in generation 9 of 10\n",
            "Model Number: 725 with model NVAR in generation 9 of 10\n",
            "Model Number: 726 with model SectionalMotif in generation 9 of 10\n",
            "Model Number: 727 with model SectionalMotif in generation 9 of 10\n",
            "Model Number: 728 with model SectionalMotif in generation 9 of 10\n",
            "Model Number: 729 with model SectionalMotif in generation 9 of 10\n",
            "Model Number: 730 with model WindowRegression in generation 9 of 10\n",
            "Model Number: 731 with model WindowRegression in generation 9 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 732 with model WindowRegression in generation 9 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Done 300 out of 300 | elapsed:    0.8s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 300 out of 300 | elapsed:    0.0s finished\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 733 with model ETS in generation 9 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 734 with model ETS in generation 9 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 735 with model ETS in generation 9 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 736 with model ETS in generation 9 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 737 with model LastValueNaive in generation 9 of 10\n",
            "Model Number: 738 with model LastValueNaive in generation 9 of 10\n",
            "Model Number: 739 with model DatepartRegression in generation 9 of 10\n",
            "Template Eval Error: ValueError('Model DatepartRegression returned NaN for one or more series. fail_on_forecast_nan=True') in model 739: DatepartRegression\n",
            "Model Number: 740 with model DatepartRegression in generation 9 of 10\n",
            "Template Eval Error: ValueError('Model DatepartRegression returned NaN for one or more series. fail_on_forecast_nan=True') in model 740: DatepartRegression\n",
            "Model Number: 741 with model DatepartRegression in generation 9 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/neighbors/_regression.py:470: UserWarning: One or more samples have no neighbors within specified radius; predicting NaN.\n",
            "  warnings.warn(empty_warning_msg)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/neighbors/_regression.py:470: UserWarning: One or more samples have no neighbors within specified radius; predicting NaN.\n",
            "  warnings.warn(empty_warning_msg)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Template Eval Error: ValueError('Failed to convert a NumPy array to a Tensor (Unsupported object type int).') in model 741: DatepartRegression\n",
            "Model Number: 742 with model UnivariateMotif in generation 9 of 10\n",
            "Model Number: 743 with model UnivariateMotif in generation 9 of 10\n",
            "Model Number: 744 with model UnivariateMotif in generation 9 of 10\n",
            "Model Number: 745 with model UnivariateMotif in generation 9 of 10\n",
            "Model Number: 746 with model AverageValueNaive in generation 9 of 10\n",
            "Model Number: 747 with model AverageValueNaive in generation 9 of 10\n",
            "Model Number: 748 with model MultivariateRegression in generation 9 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 748: MultivariateRegression\n",
            "Model Number: 749 with model MultivariateRegression in generation 9 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but not future_regressor supplied.\") in model 749: MultivariateRegression\n",
            "Model Number: 750 with model MultivariateRegression in generation 9 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 751 with model MultivariateRegression in generation 9 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 752 with model UnobservedComponents in generation 9 of 10\n",
            "Model Number: 753 with model UnobservedComponents in generation 9 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 753: UnobservedComponents\n",
            "Model Number: 754 with model UnobservedComponents in generation 9 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 754: UnobservedComponents\n",
            "Model Number: 755 with model SeasonalNaive in generation 9 of 10\n",
            "Model Number: 756 with model SeasonalNaive in generation 9 of 10\n",
            "Model Number: 757 with model SeasonalNaive in generation 9 of 10\n",
            "Model Number: 758 with model SeasonalNaive in generation 9 of 10\n",
            "Model Number: 759 with model MultivariateMotif in generation 9 of 10\n",
            "Model Number: 760 with model MultivariateMotif in generation 9 of 10\n",
            "Model Number: 761 with model MultivariateMotif in generation 9 of 10\n",
            "Model Number: 762 with model MultivariateMotif in generation 9 of 10\n",
            "Model Number: 763 with model GLS in generation 9 of 10\n",
            "Model Number: 764 with model GLS in generation 9 of 10\n",
            "Model Number: 765 with model ConstantNaive in generation 9 of 10\n",
            "Model Number: 766 with model ConstantNaive in generation 9 of 10\n",
            "Template Eval Error: Exception('Transformer STLFilter failed on fit') in model 766: ConstantNaive\n",
            "Model Number: 767 with model ConstantNaive in generation 9 of 10\n",
            "Model Number: 768 with model FBProphet in generation 9 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 769 with model FBProphet in generation 9 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 770 with model FBProphet in generation 9 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 771 with model FBProphet in generation 9 of 10\n",
            "Model Number: 772 with model GLM in generation 9 of 10\n",
            "Model Number: 773 with model GLM in generation 9 of 10\n",
            "Model Number: 774 with model GLM in generation 9 of 10\n",
            "Model Number: 775 with model GLM in generation 9 of 10\n",
            "Template Eval Error: ValueError('NaN, inf or invalid value detected in weights, estimation infeasible.') in model 775: GLM\n",
            "Model Number: 776 with model VAR in generation 9 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 776: VAR\n",
            "Model Number: 777 with model VAR in generation 9 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 777: VAR\n",
            "Model Number: 778 with model VAR in generation 9 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 778: VAR\n",
            "Model Number: 779 with model VAR in generation 9 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VAR') in model 779: VAR\n",
            "Model Number: 780 with model VECM in generation 9 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 780: VECM\n",
            "Model Number: 781 with model VECM in generation 9 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 781: VECM\n",
            "Model Number: 782 with model VECM in generation 9 of 10\n",
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 782: VECM\n",
            "Model Number: 783 with model VECM in generation 9 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/genmod/families/links.py:521: RuntimeWarning: overflow encountered in exp\n",
            "  return np.exp(z)\n",
            "/usr/local/lib/python3.7/dist-packages/statsmodels/genmod/families/family.py:134: RuntimeWarning: invalid value encountered in multiply\n",
            "  return 1. / (self.link.deriv(mu)**2 * self.variance(mu))\n",
            "/usr/local/lib/python3.7/dist-packages/statsmodels/genmod/generalized_linear_model.py:1163: RuntimeWarning: invalid value encountered in multiply\n",
            "  - self._offset_exposure)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Template Eval Error: ValueError('Only gave one variable to VECM') in model 783: VECM\n",
            "Model Number: 784 with model ARDL in generation 9 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 784: ARDL\n",
            "Model Number: 785 with model ARDL in generation 9 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 785: ARDL\n",
            "Model Number: 786 with model ARDL in generation 9 of 10\n",
            "Template Eval Error: ValueError(\"regression_type='User' but future_regressor not supplied\") in model 786: ARDL\n",
            "Model Number: 787 with model ARDL in generation 9 of 10\n",
            "Template Eval Error: ImportError(\"cannot import name 'ARDL' from 'statsmodels.tsa.api' (/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/api.py)\") in model 787: ARDL\n",
            "Model Number: 788 with model Theta in generation 9 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 788: Theta\n",
            "Model Number: 789 with model Theta in generation 9 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 789: Theta\n",
            "Model Number: 790 with model Theta in generation 9 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 790: Theta\n",
            "Model Number: 791 with model Theta in generation 9 of 10\n",
            "Template Eval Error: ModuleNotFoundError(\"No module named 'statsmodels.tsa.forecasting'\") in model 791: Theta\n",
            "New Generation: 10 of 10\n",
            "Model Number: 792 with model NVAR in generation 10 of 10\n",
            "Model Number: 793 with model NVAR in generation 10 of 10\n",
            "Model Number: 794 with model NVAR in generation 10 of 10\n",
            "Model Number: 795 with model NVAR in generation 10 of 10\n",
            "Model Number: 796 with model SectionalMotif in generation 10 of 10\n",
            "Model Number: 797 with model SectionalMotif in generation 10 of 10\n",
            "Model Number: 798 with model SectionalMotif in generation 10 of 10\n",
            "Model Number: 799 with model SectionalMotif in generation 10 of 10\n",
            "Model Number: 800 with model WindowRegression in generation 10 of 10\n",
            "Model Number: 801 with model WindowRegression in generation 10 of 10\n",
            "Model Number: 802 with model WindowRegression in generation 10 of 10\n",
            "Model Number: 803 with model ETS in generation 10 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "ETS failed on Close with ValueError('endog must be strictly positive when using multiplicative trend or seasonal components.')\n",
            "Model Number: 804 with model ETS in generation 10 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 805 with model ETS in generation 10 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 806 with model ETS in generation 10 of 10\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 807 with model LastValueNaive in generation 10 of 10\n",
            "Model Number: 808 with model LastValueNaive in generation 10 of 10\n",
            "Model Number: 809 with model LastValueNaive in generation 10 of 10\n",
            "Model Number: 810 with model DatepartRegression in generation 10 of 10\n",
            "Model Number: 811 with model DatepartRegression in generation 10 of 10\n",
            "Model Number: 812 with model DatepartRegression in generation 10 of 10\n",
            "Model Number: 813 with model UnivariateMotif in generation 10 of 10\n",
            "Template Eval Error: ValueError('kth(=100) out of bounds (63)') in model 813: UnivariateMotif\n",
            "Model Number: 814 with model UnivariateMotif in generation 10 of 10\n",
            "Model Number: 815 with model UnivariateMotif in generation 10 of 10\n",
            "Model Number: 816 with model UnivariateMotif in generation 10 of 10\n",
            "Model Number: 817 with model AverageValueNaive in generation 10 of 10\n",
            "Model Number: 818 with model AverageValueNaive in generation 10 of 10\n",
            "Model Number: 819 with model AverageValueNaive in generation 10 of 10\n",
            "Model Number: 820 with model MultivariateRegression in generation 10 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 821 with model MultivariateRegression in generation 10 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 822 with model MultivariateRegression in generation 10 of 10\n",
            "Model Number: 823 with model MultivariateRegression in generation 10 of 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.4s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 824 with model UnobservedComponents in generation 10 of 10\n",
            "Model Number: 825 with model UnobservedComponents in generation 10 of 10\n",
            "Template Eval Error: ValueError('Provided exogenous values are not of the appropriate shape. Required (10, 1), got (10,).') in model 825: UnobservedComponents\n",
            "Model Number: 826 with model UnobservedComponents in generation 10 of 10\n",
            "Model Number: 827 with model SeasonalNaive in generation 10 of 10\n",
            "Model Number: 828 with model SeasonalNaive in generation 10 of 10\n",
            "Model Number: 829 with model SeasonalNaive in generation 10 of 10\n",
            "Model Number: 830 with model SeasonalNaive in generation 10 of 10\n",
            "Model Number: 831 with model MultivariateMotif in generation 10 of 10\n",
            "Model Number: 832 with model MultivariateMotif in generation 10 of 10\n",
            "Model Number: 833 with model MultivariateMotif in generation 10 of 10\n",
            "Model Number: 834 with model MultivariateMotif in generation 10 of 10\n",
            "Model Number: 835 with model GLS in generation 10 of 10\n",
            "Model Number: 836 with model GLS in generation 10 of 10\n",
            "Model Number: 837 with model ConstantNaive in generation 10 of 10\n",
            "Model Number: 838 with model ConstantNaive in generation 10 of 10\n",
            "Model Number: 839 with model ConstantNaive in generation 10 of 10\n",
            "Model Number: 840 with model Ensemble in generation 11 of Ensembles\n",
            "Model Number: 841 with model Ensemble in generation 11 of Ensembles\n",
            "Model Number: 842 with model Ensemble in generation 11 of Ensembles\n",
            "Model Number: 843 with model Ensemble in generation 11 of Ensembles\n",
            "Model Number: 844 with model Ensemble in generation 11 of Ensembles\n",
            "Model Number: 845 with model Ensemble in generation 11 of Ensembles\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "Model Number: 846 with model Ensemble in generation 11 of Ensembles\n",
            "Model Number: 847 with model Ensemble in generation 11 of Ensembles\n",
            "Validation Round: 1\n",
            "Model Number: 1 of 127 with model Ensemble for Validation 1\n",
            "📈 1 - Ensemble with avg smape 10.21: \n",
            "Model Number: 2 of 127 with model NVAR for Validation 1\n",
            "📈 2 - NVAR with avg smape 8.75: \n",
            "Model Number: 3 of 127 with model Ensemble for Validation 1\n",
            "📈 3 - Ensemble with avg smape 8.74: \n",
            "Model Number: 4 of 127 with model Ensemble for Validation 1\n",
            "4 - Ensemble with avg smape 9.5: \n",
            "Model Number: 5 of 127 with model Ensemble for Validation 1\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "5 - Ensemble with avg smape 10.22: \n",
            "Model Number: 6 of 127 with model Ensemble for Validation 1\n",
            "6 - Ensemble with avg smape 10.07: \n",
            "Model Number: 7 of 127 with model Ensemble for Validation 1\n",
            "7 - Ensemble with avg smape 10.66: \n",
            "Model Number: 8 of 127 with model Ensemble for Validation 1\n",
            "8 - Ensemble with avg smape 10.73: \n",
            "Model Number: 9 of 127 with model SectionalMotif for Validation 1\n",
            "9 - SectionalMotif with avg smape 11.85: \n",
            "Model Number: 10 of 127 with model NVAR for Validation 1\n",
            "📈 10 - NVAR with avg smape 7.84: \n",
            "Model Number: 11 of 127 with model WindowRegression for Validation 1\n",
            "11 - WindowRegression with avg smape 10.0: \n",
            "Model Number: 12 of 127 with model NVAR for Validation 1\n",
            "📈 12 - NVAR with avg smape 7.47: \n",
            "Model Number: 13 of 127 with model Ensemble for Validation 1\n",
            "13 - Ensemble with avg smape 10.56: \n",
            "Model Number: 14 of 127 with model NVAR for Validation 1\n",
            "📈 14 - NVAR with avg smape 7.45: \n",
            "Model Number: 15 of 127 with model NVAR for Validation 1\n",
            "15 - NVAR with avg smape 7.84: \n",
            "Model Number: 16 of 127 with model ETS for Validation 1\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "16 - ETS with avg smape 9.5: \n",
            "Model Number: 17 of 127 with model WindowRegression for Validation 1\n",
            "17 - WindowRegression with avg smape 10.32: \n",
            "Model Number: 18 of 127 with model WindowRegression for Validation 1\n",
            "18 - WindowRegression with avg smape 9.6: \n",
            "Model Number: 19 of 127 with model NVAR for Validation 1\n",
            "19 - NVAR with avg smape 12.37: \n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 20 of 127 with model LastValueNaive for Validation 1\n",
            "20 - LastValueNaive with avg smape 11.54: \n",
            "Model Number: 21 of 127 with model DatepartRegression for Validation 1\n",
            "📈 21 - DatepartRegression with avg smape 4.56: \n",
            "Model Number: 22 of 127 with model UnivariateMotif for Validation 1\n",
            "22 - UnivariateMotif with avg smape 9.95: \n",
            "Model Number: 23 of 127 with model NVAR for Validation 1\n",
            "23 - NVAR with avg smape 11.31: \n",
            "Model Number: 24 of 127 with model LastValueNaive for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "24 - LastValueNaive with avg smape 11.54: \n",
            "Model Number: 25 of 127 with model LastValueNaive for Validation 1\n",
            "25 - LastValueNaive with avg smape 10.71: \n",
            "Model Number: 26 of 127 with model LastValueNaive for Validation 1\n",
            "26 - LastValueNaive with avg smape 10.71: \n",
            "Model Number: 27 of 127 with model LastValueNaive for Validation 1\n",
            "27 - LastValueNaive with avg smape 10.71: \n",
            "Model Number: 28 of 127 with model LastValueNaive for Validation 1\n",
            "28 - LastValueNaive with avg smape 10.71: \n",
            "Model Number: 29 of 127 with model LastValueNaive for Validation 1\n",
            "29 - LastValueNaive with avg smape 10.71: \n",
            "Model Number: 30 of 127 with model LastValueNaive for Validation 1\n",
            "30 - LastValueNaive with avg smape 10.71: \n",
            "Model Number: 31 of 127 with model AverageValueNaive for Validation 1\n",
            "31 - AverageValueNaive with avg smape 11.53: \n",
            "Model Number: 32 of 127 with model WindowRegression for Validation 1\n",
            "32 - WindowRegression with avg smape 10.51: \n",
            "Model Number: 33 of 127 with model SectionalMotif for Validation 1\n",
            "33 - SectionalMotif with avg smape 11.43: \n",
            "Model Number: 34 of 127 with model NVAR for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "34 - NVAR with avg smape 11.33: \n",
            "Model Number: 35 of 127 with model WindowRegression for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 100 out of 100 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "35 - WindowRegression with avg smape 10.56: \n",
            "Model Number: 36 of 127 with model MultivariateRegression for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "36 - MultivariateRegression with avg smape 15.02: \n",
            "Model Number: 37 of 127 with model AverageValueNaive for Validation 1\n",
            "37 - AverageValueNaive with avg smape 11.17: \n",
            "Model Number: 38 of 127 with model DatepartRegression for Validation 1\n",
            "38 - DatepartRegression with avg smape 10.0: \n",
            "Model Number: 39 of 127 with model UnobservedComponents for Validation 1\n",
            "39 - UnobservedComponents with avg smape 10.55: \n",
            "Model Number: 40 of 127 with model MultivariateRegression for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.4s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "40 - MultivariateRegression with avg smape 9.67: \n",
            "Model Number: 41 of 127 with model SectionalMotif for Validation 1\n",
            "41 - SectionalMotif with avg smape 12.64: \n",
            "Model Number: 42 of 127 with model SectionalMotif for Validation 1\n",
            "42 - SectionalMotif with avg smape 12.57: \n",
            "Model Number: 43 of 127 with model UnobservedComponents for Validation 1\n",
            "43 - UnobservedComponents with avg smape 11.93: \n",
            "Model Number: 44 of 127 with model UnobservedComponents for Validation 1\n",
            "44 - UnobservedComponents with avg smape 10.75: \n",
            "Model Number: 45 of 127 with model WindowRegression for Validation 1\n",
            "45 - WindowRegression with avg smape 200.0: \n",
            "Model Number: 46 of 127 with model UnobservedComponents for Validation 1\n",
            "46 - UnobservedComponents with avg smape 11.01: \n",
            "Model Number: 47 of 127 with model ETS for Validation 1\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "47 - ETS with avg smape 9.79: \n",
            "Model Number: 48 of 127 with model WindowRegression for Validation 1\n",
            "48 - WindowRegression with avg smape 11.39: \n",
            "Model Number: 49 of 127 with model AverageValueNaive for Validation 1\n",
            "49 - AverageValueNaive with avg smape 10.71: \n",
            "Model Number: 50 of 127 with model ETS for Validation 1\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "50 - ETS with avg smape 10.71: \n",
            "Model Number: 51 of 127 with model WindowRegression for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 1000 out of 1000 | elapsed:    1.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "51 - WindowRegression with avg smape 13.47: \n",
            "Model Number: 52 of 127 with model UnivariateMotif for Validation 1\n",
            "52 - UnivariateMotif with avg smape 10.52: \n",
            "Model Number: 53 of 127 with model UnobservedComponents for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "53 - UnobservedComponents with avg smape 10.96: \n",
            "Model Number: 54 of 127 with model MultivariateRegression for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "54 - MultivariateRegression with avg smape 15.0: \n",
            "Model Number: 55 of 127 with model UnobservedComponents for Validation 1\n",
            "55 - UnobservedComponents with avg smape 10.96: \n",
            "Model Number: 56 of 127 with model ETS for Validation 1\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "56 - ETS with avg smape 9.86: \n",
            "Model Number: 57 of 127 with model ETS for Validation 1\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "57 - ETS with avg smape 10.1: \n",
            "Model Number: 58 of 127 with model ETS for Validation 1\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "58 - ETS with avg smape 9.91: \n",
            "Model Number: 59 of 127 with model MultivariateRegression for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "59 - MultivariateRegression with avg smape 12.61: \n",
            "Model Number: 60 of 127 with model MultivariateRegression for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "60 - MultivariateRegression with avg smape 15.06: \n",
            "Model Number: 61 of 127 with model UnivariateMotif for Validation 1\n",
            "61 - UnivariateMotif with avg smape 12.59: \n",
            "Model Number: 62 of 127 with model ETS for Validation 1\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "62 - ETS with avg smape 10.47: \n",
            "Model Number: 63 of 127 with model ETS for Validation 1\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "63 - ETS with avg smape 10.71: \n",
            "Model Number: 64 of 127 with model UnobservedComponents for Validation 1\n",
            "64 - UnobservedComponents with avg smape 8.8: \n",
            "Model Number: 65 of 127 with model AverageValueNaive for Validation 1\n",
            "65 - AverageValueNaive with avg smape 8.0: \n",
            "Model Number: 66 of 127 with model AverageValueNaive for Validation 1\n",
            "66 - AverageValueNaive with avg smape 10.74: \n",
            "Model Number: 67 of 127 with model SeasonalNaive for Validation 1\n",
            "67 - SeasonalNaive with avg smape 9.63: \n",
            "Model Number: 68 of 127 with model MultivariateMotif for Validation 1\n",
            "68 - MultivariateMotif with avg smape 14.06: \n",
            "Model Number: 69 of 127 with model SeasonalNaive for Validation 1\n",
            "69 - SeasonalNaive with avg smape 9.8: \n",
            "Model Number: 70 of 127 with model SeasonalNaive for Validation 1\n",
            "70 - SeasonalNaive with avg smape 9.81: \n",
            "Model Number: 71 of 127 with model SeasonalNaive for Validation 1\n",
            "71 - SeasonalNaive with avg smape 8.5: \n",
            "Model Number: 72 of 127 with model UnobservedComponents for Validation 1\n",
            "72 - UnobservedComponents with avg smape 6.47: \n",
            "Model Number: 73 of 127 with model SeasonalNaive for Validation 1\n",
            "73 - SeasonalNaive with avg smape 10.89: \n",
            "Model Number: 74 of 127 with model AverageValueNaive for Validation 1\n",
            "74 - AverageValueNaive with avg smape 11.0: \n",
            "Model Number: 75 of 127 with model MultivariateMotif for Validation 1\n",
            "75 - MultivariateMotif with avg smape 14.12: \n",
            "Model Number: 76 of 127 with model AverageValueNaive for Validation 1\n",
            "76 - AverageValueNaive with avg smape 10.99: \n",
            "Model Number: 77 of 127 with model GLS for Validation 1\n",
            "77 - GLS with avg smape 10.95: \n",
            "Model Number: 78 of 127 with model GLS for Validation 1\n",
            "78 - GLS with avg smape 10.95: \n",
            "Model Number: 79 of 127 with model AverageValueNaive for Validation 1\n",
            "79 - AverageValueNaive with avg smape 5.74: \n",
            "Model Number: 80 of 127 with model MultivariateRegression for Validation 1\n",
            "80 - MultivariateRegression with avg smape 12.1: \n",
            "Model Number: 81 of 127 with model DatepartRegression for Validation 1\n",
            "81 - DatepartRegression with avg smape 9.94: \n",
            "Model Number: 82 of 127 with model GLS for Validation 1\n",
            "82 - GLS with avg smape 10.88: \n",
            "Model Number: 83 of 127 with model GLS for Validation 1\n",
            "83 - GLS with avg smape 10.99: \n",
            "Model Number: 84 of 127 with model SeasonalNaive for Validation 1\n",
            "84 - SeasonalNaive with avg smape 9.39: \n",
            "Model Number: 85 of 127 with model SectionalMotif for Validation 1\n",
            "85 - SectionalMotif with avg smape 10.6: \n",
            "Model Number: 86 of 127 with model ConstantNaive for Validation 1\n",
            "86 - ConstantNaive with avg smape 10.75: \n",
            "Model Number: 87 of 127 with model GLS for Validation 1\n",
            "87 - GLS with avg smape 11.08: \n",
            "Model Number: 88 of 127 with model MultivariateRegression for Validation 1\n",
            "88 - MultivariateRegression with avg smape 15.48: \n",
            "Model Number: 89 of 127 with model UnivariateMotif for Validation 1\n",
            "89 - UnivariateMotif with avg smape 9.66: \n",
            "Model Number: 90 of 127 with model MultivariateRegression for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "90 - MultivariateRegression with avg smape 10.27: \n",
            "Model Number: 91 of 127 with model UnivariateMotif for Validation 1\n",
            "91 - UnivariateMotif with avg smape 10.0: \n",
            "Model Number: 92 of 127 with model UnivariateMotif for Validation 1\n",
            "92 - UnivariateMotif with avg smape 10.87: \n",
            "Model Number: 93 of 127 with model DatepartRegression for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "93 - DatepartRegression with avg smape 8.26: \n",
            "Model Number: 94 of 127 with model GLS for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Done 1000 out of 1000 | elapsed:    1.4s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "94 - GLS with avg smape 10.39: \n",
            "Model Number: 95 of 127 with model DatepartRegression for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 100 out of 100 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "95 - DatepartRegression with avg smape 8.92: \n",
            "Model Number: 96 of 127 with model DatepartRegression for Validation 1\n",
            "96 - DatepartRegression with avg smape 6.93: \n",
            "Model Number: 97 of 127 with model MultivariateMotif for Validation 1\n",
            "97 - MultivariateMotif with avg smape 12.88: \n",
            "Model Number: 98 of 127 with model GLS for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "98 - GLS with avg smape 10.78: \n",
            "Model Number: 99 of 127 with model SectionalMotif for Validation 1\n",
            "99 - SectionalMotif with avg smape 9.87: \n",
            "Model Number: 100 of 127 with model ConstantNaive for Validation 1\n",
            "100 - ConstantNaive with avg smape 10.71: \n",
            "Model Number: 101 of 127 with model SeasonalNaive for Validation 1\n",
            "101 - SeasonalNaive with avg smape 8.7: \n",
            "Model Number: 102 of 127 with model MultivariateMotif for Validation 1\n",
            "102 - MultivariateMotif with avg smape 12.97: \n",
            "Model Number: 103 of 127 with model UnivariateMotif for Validation 1\n",
            "103 - UnivariateMotif with avg smape 12.87: \n",
            "Model Number: 104 of 127 with model SeasonalNaive for Validation 1\n",
            "104 - SeasonalNaive with avg smape 6.04: \n",
            "Model Number: 105 of 127 with model SectionalMotif for Validation 1\n",
            "105 - SectionalMotif with avg smape 13.36: \n",
            "Model Number: 106 of 127 with model FBProphet for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "106 - FBProphet with avg smape 9.3: \n",
            "Model Number: 107 of 127 with model ConstantNaive for Validation 1\n",
            "107 - ConstantNaive with avg smape 11.07: \n",
            "Model Number: 108 of 127 with model MultivariateMotif for Validation 1\n",
            "108 - MultivariateMotif with avg smape 10.01: \n",
            "Model Number: 109 of 127 with model FBProphet for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 27.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "109 - FBProphet with avg smape 9.59: \n",
            "Model Number: 110 of 127 with model FBProphet for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "110 - FBProphet with avg smape 9.38: \n",
            "Model Number: 111 of 127 with model FBProphet for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "111 - FBProphet with avg smape 12.34: \n",
            "Model Number: 112 of 127 with model FBProphet for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "112 - FBProphet with avg smape 12.87: \n",
            "Model Number: 113 of 127 with model FBProphet for Validation 1\n",
            "113 - FBProphet with avg smape 12.44: \n",
            "Model Number: 114 of 127 with model UnivariateMotif for Validation 1\n",
            "114 - UnivariateMotif with avg smape 12.57: \n",
            "Model Number: 115 of 127 with model MultivariateMotif for Validation 1\n",
            "115 - MultivariateMotif with avg smape 13.19: \n",
            "Model Number: 116 of 127 with model SectionalMotif for Validation 1\n",
            "116 - SectionalMotif with avg smape 7.7: \n",
            "Model Number: 117 of 127 with model FBProphet for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "117 - FBProphet with avg smape 7.49: \n",
            "Model Number: 118 of 127 with model MultivariateMotif for Validation 1\n",
            "118 - MultivariateMotif with avg smape 12.06: \n",
            "Model Number: 119 of 127 with model MultivariateMotif for Validation 1\n",
            "119 - MultivariateMotif with avg smape 14.19: \n",
            "Model Number: 120 of 127 with model GLS for Validation 1\n",
            "120 - GLS with avg smape 6.79: \n",
            "Model Number: 121 of 127 with model FBProphet for Validation 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "121 - FBProphet with avg smape 10.15: \n",
            "Model Number: 122 of 127 with model DatepartRegression for Validation 1\n",
            "122 - DatepartRegression with avg smape 6.23: \n",
            "Model Number: 123 of 127 with model ConstantNaive for Validation 1\n",
            "123 - ConstantNaive with avg smape 6.93: \n",
            "Model Number: 124 of 127 with model ConstantNaive for Validation 1\n",
            "124 - ConstantNaive with avg smape 6.93: \n",
            "Model Number: 125 of 127 with model ConstantNaive for Validation 1\n",
            "125 - ConstantNaive with avg smape 6.93: \n",
            "Model Number: 126 of 127 with model ConstantNaive for Validation 1\n",
            "126 - ConstantNaive with avg smape 6.93: \n",
            "Model Number: 127 of 127 with model GLM for Validation 1\n",
            "127 - GLM with avg smape 6.93: \n",
            "Validation Round: 2\n",
            "Model Number: 1 of 127 with model Ensemble for Validation 2\n",
            "📈 1 - Ensemble with avg smape 3.95: \n",
            "Model Number: 2 of 127 with model NVAR for Validation 2\n",
            "📈 2 - NVAR with avg smape 3.77: \n",
            "Model Number: 3 of 127 with model Ensemble for Validation 2\n",
            "3 - Ensemble with avg smape 3.77: \n",
            "Model Number: 4 of 127 with model Ensemble for Validation 2\n",
            "📈 4 - Ensemble with avg smape 3.56: \n",
            "Model Number: 5 of 127 with model Ensemble for Validation 2\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "5 - Ensemble with avg smape 4.49: \n",
            "Model Number: 6 of 127 with model Ensemble for Validation 2\n",
            "📈 6 - Ensemble with avg smape 3.23: \n",
            "Model Number: 7 of 127 with model Ensemble for Validation 2\n",
            "7 - Ensemble with avg smape 3.88: \n",
            "Model Number: 8 of 127 with model Ensemble for Validation 2\n",
            "8 - Ensemble with avg smape 3.9: \n",
            "Model Number: 9 of 127 with model SectionalMotif for Validation 2\n",
            "9 - SectionalMotif with avg smape 3.27: \n",
            "Model Number: 10 of 127 with model NVAR for Validation 2\n",
            "10 - NVAR with avg smape 3.74: \n",
            "Model Number: 11 of 127 with model WindowRegression for Validation 2\n",
            "11 - WindowRegression with avg smape 4.9: \n",
            "Model Number: 12 of 127 with model NVAR for Validation 2\n",
            "12 - NVAR with avg smape 3.79: \n",
            "Model Number: 13 of 127 with model Ensemble for Validation 2\n",
            "13 - Ensemble with avg smape 3.83: \n",
            "Model Number: 14 of 127 with model NVAR for Validation 2\n",
            "14 - NVAR with avg smape 4.11: \n",
            "Model Number: 15 of 127 with model NVAR for Validation 2\n",
            "15 - NVAR with avg smape 3.56: \n",
            "Model Number: 16 of 127 with model ETS for Validation 2\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "16 - ETS with avg smape 5.84: \n",
            "Model Number: 17 of 127 with model WindowRegression for Validation 2\n",
            "📈 17 - WindowRegression with avg smape 3.18: \n",
            "Model Number: 18 of 127 with model WindowRegression for Validation 2\n",
            "📈 18 - WindowRegression with avg smape 3.12: \n",
            "Model Number: 19 of 127 with model NVAR for Validation 2\n",
            "19 - NVAR with avg smape 4.22: \n",
            "Model Number: 20 of 127 with model LastValueNaive for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "20 - LastValueNaive with avg smape 4.76: \n",
            "Model Number: 21 of 127 with model DatepartRegression for Validation 2\n",
            "21 - DatepartRegression with avg smape 4.2: \n",
            "Model Number: 22 of 127 with model UnivariateMotif for Validation 2\n",
            "📈 22 - UnivariateMotif with avg smape 2.54: \n",
            "Model Number: 23 of 127 with model NVAR for Validation 2\n",
            "23 - NVAR with avg smape 4.88: \n",
            "Model Number: 24 of 127 with model LastValueNaive for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "24 - LastValueNaive with avg smape 4.49: \n",
            "Model Number: 25 of 127 with model LastValueNaive for Validation 2\n",
            "25 - LastValueNaive with avg smape 3.87: \n",
            "Model Number: 26 of 127 with model LastValueNaive for Validation 2\n",
            "26 - LastValueNaive with avg smape 3.87: \n",
            "Model Number: 27 of 127 with model LastValueNaive for Validation 2\n",
            "27 - LastValueNaive with avg smape 3.87: \n",
            "Model Number: 28 of 127 with model LastValueNaive for Validation 2\n",
            "28 - LastValueNaive with avg smape 3.87: \n",
            "Model Number: 29 of 127 with model LastValueNaive for Validation 2\n",
            "29 - LastValueNaive with avg smape 3.87: \n",
            "Model Number: 30 of 127 with model LastValueNaive for Validation 2\n",
            "30 - LastValueNaive with avg smape 3.87: \n",
            "Model Number: 31 of 127 with model AverageValueNaive for Validation 2\n",
            "31 - AverageValueNaive with avg smape 4.72: \n",
            "Model Number: 32 of 127 with model WindowRegression for Validation 2\n",
            "32 - WindowRegression with avg smape 3.51: \n",
            "Model Number: 33 of 127 with model SectionalMotif for Validation 2\n",
            "33 - SectionalMotif with avg smape 4.28: \n",
            "Model Number: 34 of 127 with model NVAR for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "34 - NVAR with avg smape 4.47: \n",
            "Model Number: 35 of 127 with model WindowRegression for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 100 out of 100 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "35 - WindowRegression with avg smape 2.89: \n",
            "Model Number: 36 of 127 with model MultivariateRegression for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "36 - MultivariateRegression with avg smape 2.71: \n",
            "Model Number: 37 of 127 with model AverageValueNaive for Validation 2\n",
            "37 - AverageValueNaive with avg smape 4.75: \n",
            "Model Number: 38 of 127 with model DatepartRegression for Validation 2\n",
            "38 - DatepartRegression with avg smape 4.83: \n",
            "Model Number: 39 of 127 with model UnobservedComponents for Validation 2\n",
            "39 - UnobservedComponents with avg smape 3.94: \n",
            "Model Number: 40 of 127 with model MultivariateRegression for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "40 - MultivariateRegression with avg smape 2.54: \n",
            "Model Number: 41 of 127 with model SectionalMotif for Validation 2\n",
            "41 - SectionalMotif with avg smape 4.06: \n",
            "Model Number: 42 of 127 with model SectionalMotif for Validation 2\n",
            "42 - SectionalMotif with avg smape 3.69: \n",
            "Model Number: 43 of 127 with model UnobservedComponents for Validation 2\n",
            "43 - UnobservedComponents with avg smape 5.33: \n",
            "Model Number: 44 of 127 with model UnobservedComponents for Validation 2\n",
            "44 - UnobservedComponents with avg smape 3.91: \n",
            "Model Number: 45 of 127 with model WindowRegression for Validation 2\n",
            "45 - WindowRegression with avg smape 200.0: \n",
            "Model Number: 46 of 127 with model UnobservedComponents for Validation 2\n",
            "46 - UnobservedComponents with avg smape 4.37: \n",
            "Model Number: 47 of 127 with model ETS for Validation 2\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "47 - ETS with avg smape 3.77: \n",
            "Model Number: 48 of 127 with model WindowRegression for Validation 2\n",
            "48 - WindowRegression with avg smape 4.88: \n",
            "Model Number: 49 of 127 with model AverageValueNaive for Validation 2\n",
            "49 - AverageValueNaive with avg smape 3.87: \n",
            "Model Number: 50 of 127 with model ETS for Validation 2\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "50 - ETS with avg smape 3.87: \n",
            "Model Number: 51 of 127 with model WindowRegression for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 1000 out of 1000 | elapsed:    1.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "51 - WindowRegression with avg smape 5.77: \n",
            "Model Number: 52 of 127 with model UnivariateMotif for Validation 2\n",
            "52 - UnivariateMotif with avg smape 3.39: \n",
            "Model Number: 53 of 127 with model UnobservedComponents for Validation 2\n",
            "53 - UnobservedComponents with avg smape 4.41: \n",
            "Model Number: 54 of 127 with model MultivariateRegression for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "📈 54 - MultivariateRegression with avg smape 2.25: \n",
            "Model Number: 55 of 127 with model UnobservedComponents for Validation 2\n",
            "55 - UnobservedComponents with avg smape 4.41: \n",
            "Model Number: 56 of 127 with model ETS for Validation 2\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "56 - ETS with avg smape 3.79: \n",
            "Model Number: 57 of 127 with model ETS for Validation 2\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "57 - ETS with avg smape 4.41: \n",
            "Model Number: 58 of 127 with model ETS for Validation 2\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "58 - ETS with avg smape 3.82: \n",
            "Model Number: 59 of 127 with model MultivariateRegression for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "59 - MultivariateRegression with avg smape 2.63: \n",
            "Model Number: 60 of 127 with model MultivariateRegression for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "60 - MultivariateRegression with avg smape 2.32: \n",
            "Model Number: 61 of 127 with model UnivariateMotif for Validation 2\n",
            "61 - UnivariateMotif with avg smape 5.61: \n",
            "Model Number: 62 of 127 with model ETS for Validation 2\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "62 - ETS with avg smape 3.98: \n",
            "Model Number: 63 of 127 with model ETS for Validation 2\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "63 - ETS with avg smape 3.86: \n",
            "Model Number: 64 of 127 with model UnobservedComponents for Validation 2\n",
            "64 - UnobservedComponents with avg smape 3.69: \n",
            "Model Number: 65 of 127 with model AverageValueNaive for Validation 2\n",
            "65 - AverageValueNaive with avg smape 3.46: \n",
            "Model Number: 66 of 127 with model AverageValueNaive for Validation 2\n",
            "66 - AverageValueNaive with avg smape 3.88: \n",
            "Model Number: 67 of 127 with model SeasonalNaive for Validation 2\n",
            "67 - SeasonalNaive with avg smape 3.89: \n",
            "Model Number: 68 of 127 with model MultivariateMotif for Validation 2\n",
            "68 - MultivariateMotif with avg smape 5.2: \n",
            "Model Number: 69 of 127 with model SeasonalNaive for Validation 2\n",
            "69 - SeasonalNaive with avg smape 3.89: \n",
            "Model Number: 70 of 127 with model SeasonalNaive for Validation 2\n",
            "70 - SeasonalNaive with avg smape 3.9: \n",
            "Model Number: 71 of 127 with model SeasonalNaive for Validation 2\n",
            "71 - SeasonalNaive with avg smape 2.91: \n",
            "Model Number: 72 of 127 with model UnobservedComponents for Validation 2\n",
            "72 - UnobservedComponents with avg smape 4.55: \n",
            "Model Number: 73 of 127 with model SeasonalNaive for Validation 2\n",
            "73 - SeasonalNaive with avg smape 4.47: \n",
            "Model Number: 74 of 127 with model AverageValueNaive for Validation 2\n",
            "74 - AverageValueNaive with avg smape 4.55: \n",
            "Model Number: 75 of 127 with model MultivariateMotif for Validation 2\n",
            "75 - MultivariateMotif with avg smape 2.86: \n",
            "Model Number: 76 of 127 with model AverageValueNaive for Validation 2\n",
            "76 - AverageValueNaive with avg smape 4.45: \n",
            "Model Number: 77 of 127 with model GLS for Validation 2\n",
            "77 - GLS with avg smape 4.37: \n",
            "Model Number: 78 of 127 with model GLS for Validation 2\n",
            "78 - GLS with avg smape 4.37: \n",
            "Model Number: 79 of 127 with model AverageValueNaive for Validation 2\n",
            "79 - AverageValueNaive with avg smape 3.87: \n",
            "Model Number: 80 of 127 with model MultivariateRegression for Validation 2\n",
            "80 - MultivariateRegression with avg smape 5.95: \n",
            "Model Number: 81 of 127 with model DatepartRegression for Validation 2\n",
            "81 - DatepartRegression with avg smape 5.96: \n",
            "Model Number: 82 of 127 with model GLS for Validation 2\n",
            "82 - GLS with avg smape 4.22: \n",
            "Model Number: 83 of 127 with model GLS for Validation 2\n",
            "83 - GLS with avg smape 4.45: \n",
            "Model Number: 84 of 127 with model SeasonalNaive for Validation 2\n",
            "84 - SeasonalNaive with avg smape 5.86: \n",
            "Model Number: 85 of 127 with model SectionalMotif for Validation 2\n",
            "85 - SectionalMotif with avg smape 5.02: \n",
            "Model Number: 86 of 127 with model ConstantNaive for Validation 2\n",
            "86 - ConstantNaive with avg smape 3.91: \n",
            "Model Number: 87 of 127 with model GLS for Validation 2\n",
            "87 - GLS with avg smape 4.32: \n",
            "Model Number: 88 of 127 with model MultivariateRegression for Validation 2\n",
            "📈 88 - MultivariateRegression with avg smape 1.59: \n",
            "Model Number: 89 of 127 with model UnivariateMotif for Validation 2\n",
            "89 - UnivariateMotif with avg smape 6.68: \n",
            "Model Number: 90 of 127 with model MultivariateRegression for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "90 - MultivariateRegression with avg smape 2.17: \n",
            "Model Number: 91 of 127 with model UnivariateMotif for Validation 2\n",
            "91 - UnivariateMotif with avg smape 7.05: \n",
            "Model Number: 92 of 127 with model UnivariateMotif for Validation 2\n",
            "92 - UnivariateMotif with avg smape 4.18: \n",
            "Model Number: 93 of 127 with model DatepartRegression for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "93 - DatepartRegression with avg smape 6.98: \n",
            "Model Number: 94 of 127 with model GLS for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Done 1000 out of 1000 | elapsed:    1.4s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "94 - GLS with avg smape 3.61: \n",
            "Model Number: 95 of 127 with model DatepartRegression for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 100 out of 100 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "95 - DatepartRegression with avg smape 6.77: \n",
            "Model Number: 96 of 127 with model DatepartRegression for Validation 2\n",
            "96 - DatepartRegression with avg smape 14.49: \n",
            "Model Number: 97 of 127 with model MultivariateMotif for Validation 2\n",
            "97 - MultivariateMotif with avg smape 2.39: \n",
            "Model Number: 98 of 127 with model GLS for Validation 2\n",
            "98 - GLS with avg smape 4.08: \n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Number: 99 of 127 with model SectionalMotif for Validation 2\n",
            "99 - SectionalMotif with avg smape 2.24: \n",
            "Model Number: 100 of 127 with model ConstantNaive for Validation 2\n",
            "100 - ConstantNaive with avg smape 3.87: \n",
            "Model Number: 101 of 127 with model SeasonalNaive for Validation 2\n",
            "101 - SeasonalNaive with avg smape 3.92: \n",
            "Model Number: 102 of 127 with model MultivariateMotif for Validation 2\n",
            "102 - MultivariateMotif with avg smape 2.49: \n",
            "Model Number: 103 of 127 with model UnivariateMotif for Validation 2\n",
            "103 - UnivariateMotif with avg smape 4.19: \n",
            "Model Number: 104 of 127 with model SeasonalNaive for Validation 2\n",
            "104 - SeasonalNaive with avg smape 2.87: \n",
            "Model Number: 105 of 127 with model SectionalMotif for Validation 2\n",
            "105 - SectionalMotif with avg smape 2.45: \n",
            "Model Number: 106 of 127 with model FBProphet for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "106 - FBProphet with avg smape 2.81: \n",
            "Model Number: 107 of 127 with model ConstantNaive for Validation 2\n",
            "107 - ConstantNaive with avg smape 4.27: \n",
            "Model Number: 108 of 127 with model MultivariateMotif for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "108 - MultivariateMotif with avg smape 3.74: \n",
            "Model Number: 109 of 127 with model FBProphet for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 26.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "109 - FBProphet with avg smape 4.06: \n",
            "Model Number: 110 of 127 with model FBProphet for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "110 - FBProphet with avg smape 2.6: \n",
            "Model Number: 111 of 127 with model FBProphet for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "111 - FBProphet with avg smape 4.76: \n",
            "Model Number: 112 of 127 with model FBProphet for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "112 - FBProphet with avg smape 4.64: \n",
            "Model Number: 113 of 127 with model FBProphet for Validation 2\n",
            "113 - FBProphet with avg smape 4.86: \n",
            "Model Number: 114 of 127 with model UnivariateMotif for Validation 2\n",
            "114 - UnivariateMotif with avg smape 2.39: \n",
            "Model Number: 115 of 127 with model MultivariateMotif for Validation 2\n",
            "115 - MultivariateMotif with avg smape 1.86: \n",
            "Model Number: 116 of 127 with model SectionalMotif for Validation 2\n",
            "116 - SectionalMotif with avg smape 4.93: \n",
            "Model Number: 117 of 127 with model FBProphet for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "117 - FBProphet with avg smape 8.97: \n",
            "Model Number: 118 of 127 with model MultivariateMotif for Validation 2\n",
            "118 - MultivariateMotif with avg smape 3.96: \n",
            "Model Number: 119 of 127 with model MultivariateMotif for Validation 2\n",
            "119 - MultivariateMotif with avg smape 2.19: \n",
            "Model Number: 120 of 127 with model GLS for Validation 2\n",
            "120 - GLS with avg smape 3.29: \n",
            "Model Number: 121 of 127 with model FBProphet for Validation 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "121 - FBProphet with avg smape 4.04: \n",
            "Model Number: 122 of 127 with model DatepartRegression for Validation 2\n",
            "122 - DatepartRegression with avg smape 5.9: \n",
            "Model Number: 123 of 127 with model ConstantNaive for Validation 2\n",
            "123 - ConstantNaive with avg smape 14.49: \n",
            "Model Number: 124 of 127 with model ConstantNaive for Validation 2\n",
            "124 - ConstantNaive with avg smape 14.49: \n",
            "Model Number: 125 of 127 with model ConstantNaive for Validation 2\n",
            "125 - ConstantNaive with avg smape 14.49: \n",
            "Model Number: 126 of 127 with model ConstantNaive for Validation 2\n",
            "126 - ConstantNaive with avg smape 14.49: \n",
            "Model Number: 127 of 127 with model GLM for Validation 2\n",
            "127 - GLM with avg smape 14.49: \n",
            "Validation Round: 3\n",
            "Model Number: 1 of 127 with model Ensemble for Validation 3\n",
            "📈 1 - Ensemble with avg smape 2.6: \n",
            "Model Number: 2 of 127 with model NVAR for Validation 3\n",
            "2 - NVAR with avg smape 3.88: \n",
            "Model Number: 3 of 127 with model Ensemble for Validation 3\n",
            "3 - Ensemble with avg smape 3.88: \n",
            "Model Number: 4 of 127 with model Ensemble for Validation 3\n",
            "4 - Ensemble with avg smape 3.48: \n",
            "Model Number: 5 of 127 with model Ensemble for Validation 3\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "📈 5 - Ensemble with avg smape 2.14: \n",
            "Model Number: 6 of 127 with model Ensemble for Validation 3\n",
            "6 - Ensemble with avg smape 3.42: \n",
            "Model Number: 7 of 127 with model Ensemble for Validation 3\n",
            "7 - Ensemble with avg smape 2.55: \n",
            "Model Number: 8 of 127 with model Ensemble for Validation 3\n",
            "8 - Ensemble with avg smape 2.48: \n",
            "Model Number: 9 of 127 with model SectionalMotif for Validation 3\n",
            "9 - SectionalMotif with avg smape 2.51: \n",
            "Model Number: 10 of 127 with model NVAR for Validation 3\n",
            "10 - NVAR with avg smape 4.04: \n",
            "Model Number: 11 of 127 with model WindowRegression for Validation 3\n",
            "📈 11 - WindowRegression with avg smape 1.61: \n",
            "Model Number: 12 of 127 with model NVAR for Validation 3\n",
            "12 - NVAR with avg smape 4.5: \n",
            "Model Number: 13 of 127 with model Ensemble for Validation 3\n",
            "13 - Ensemble with avg smape 3.0: \n",
            "Model Number: 14 of 127 with model NVAR for Validation 3\n",
            "14 - NVAR with avg smape 4.43: \n",
            "Model Number: 15 of 127 with model NVAR for Validation 3\n",
            "15 - NVAR with avg smape 4.06: \n",
            "Model Number: 16 of 127 with model ETS for Validation 3\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "16 - ETS with avg smape 2.62: \n",
            "Model Number: 17 of 127 with model WindowRegression for Validation 3\n",
            "📈 17 - WindowRegression with avg smape 1.52: \n",
            "Model Number: 18 of 127 with model WindowRegression for Validation 3\n",
            "18 - WindowRegression with avg smape 1.94: \n",
            "Model Number: 19 of 127 with model NVAR for Validation 3\n",
            "19 - NVAR with avg smape 2.14: \n",
            "Model Number: 20 of 127 with model LastValueNaive for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "📈 20 - LastValueNaive with avg smape 1.09: \n",
            "Model Number: 21 of 127 with model DatepartRegression for Validation 3\n",
            "21 - DatepartRegression with avg smape 4.56: \n",
            "Model Number: 22 of 127 with model UnivariateMotif for Validation 3\n",
            "22 - UnivariateMotif with avg smape 3.97: \n",
            "Model Number: 23 of 127 with model NVAR for Validation 3\n",
            "23 - NVAR with avg smape 2.55: \n",
            "Model Number: 24 of 127 with model LastValueNaive for Validation 3\n",
            "24 - LastValueNaive with avg smape 1.26: \n",
            "Model Number: 25 of 127 with model LastValueNaive for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "25 - LastValueNaive with avg smape 2.37: \n",
            "Model Number: 26 of 127 with model LastValueNaive for Validation 3\n",
            "26 - LastValueNaive with avg smape 2.37: \n",
            "Model Number: 27 of 127 with model LastValueNaive for Validation 3\n",
            "27 - LastValueNaive with avg smape 2.37: \n",
            "Model Number: 28 of 127 with model LastValueNaive for Validation 3\n",
            "28 - LastValueNaive with avg smape 2.37: \n",
            "Model Number: 29 of 127 with model LastValueNaive for Validation 3\n",
            "29 - LastValueNaive with avg smape 2.37: \n",
            "Model Number: 30 of 127 with model LastValueNaive for Validation 3\n",
            "30 - LastValueNaive with avg smape 2.37: \n",
            "Model Number: 31 of 127 with model AverageValueNaive for Validation 3\n",
            "31 - AverageValueNaive with avg smape 2.57: \n",
            "Model Number: 32 of 127 with model WindowRegression for Validation 3\n",
            "32 - WindowRegression with avg smape 1.45: \n",
            "Model Number: 33 of 127 with model SectionalMotif for Validation 3\n",
            "33 - SectionalMotif with avg smape 1.87: \n",
            "Model Number: 34 of 127 with model NVAR for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "34 - NVAR with avg smape 2.18: \n",
            "Model Number: 35 of 127 with model WindowRegression for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 100 out of 100 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "35 - WindowRegression with avg smape 3.74: \n",
            "Model Number: 36 of 127 with model MultivariateRegression for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "36 - MultivariateRegression with avg smape 2.35: \n",
            "Model Number: 37 of 127 with model AverageValueNaive for Validation 3\n",
            "37 - AverageValueNaive with avg smape 2.54: \n",
            "Model Number: 38 of 127 with model DatepartRegression for Validation 3\n",
            "38 - DatepartRegression with avg smape 2.9: \n",
            "Model Number: 39 of 127 with model UnobservedComponents for Validation 3\n",
            "39 - UnobservedComponents with avg smape 2.32: \n",
            "Model Number: 40 of 127 with model MultivariateRegression for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "40 - MultivariateRegression with avg smape 3.69: \n",
            "Model Number: 41 of 127 with model SectionalMotif for Validation 3\n",
            "41 - SectionalMotif with avg smape 2.14: \n",
            "Model Number: 42 of 127 with model SectionalMotif for Validation 3\n",
            "42 - SectionalMotif with avg smape 2.08: \n",
            "Model Number: 43 of 127 with model UnobservedComponents for Validation 3\n",
            "43 - UnobservedComponents with avg smape 2.81: \n",
            "Model Number: 44 of 127 with model UnobservedComponents for Validation 3\n",
            "44 - UnobservedComponents with avg smape 2.41: \n",
            "Model Number: 45 of 127 with model WindowRegression for Validation 3\n",
            "45 - WindowRegression with avg smape 200.0: \n",
            "Model Number: 46 of 127 with model UnobservedComponents for Validation 3\n",
            "46 - UnobservedComponents with avg smape 2.9: \n",
            "Model Number: 47 of 127 with model ETS for Validation 3\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "47 - ETS with avg smape 2.64: \n",
            "Model Number: 48 of 127 with model WindowRegression for Validation 3\n",
            "48 - WindowRegression with avg smape 2.25: \n",
            "Model Number: 49 of 127 with model AverageValueNaive for Validation 3\n",
            "49 - AverageValueNaive with avg smape 2.37: \n",
            "Model Number: 50 of 127 with model ETS for Validation 3\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "50 - ETS with avg smape 2.38: \n",
            "Model Number: 51 of 127 with model WindowRegression for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 1000 out of 1000 | elapsed:    0.9s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "51 - WindowRegression with avg smape 4.62: \n",
            "Model Number: 52 of 127 with model UnivariateMotif for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "52 - UnivariateMotif with avg smape 2.54: \n",
            "Model Number: 53 of 127 with model UnobservedComponents for Validation 3\n",
            "53 - UnobservedComponents with avg smape 2.53: \n",
            "Model Number: 54 of 127 with model MultivariateRegression for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "54 - MultivariateRegression with avg smape 2.56: \n",
            "Model Number: 55 of 127 with model UnobservedComponents for Validation 3\n",
            "55 - UnobservedComponents with avg smape 2.53: \n",
            "Model Number: 56 of 127 with model ETS for Validation 3\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "56 - ETS with avg smape 2.6: \n",
            "Model Number: 57 of 127 with model ETS for Validation 3\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "57 - ETS with avg smape 2.95: \n",
            "Model Number: 58 of 127 with model ETS for Validation 3\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "58 - ETS with avg smape 2.55: \n",
            "Model Number: 59 of 127 with model MultivariateRegression for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "59 - MultivariateRegression with avg smape 4.85: \n",
            "Model Number: 60 of 127 with model MultivariateRegression for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.2s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "60 - MultivariateRegression with avg smape 2.57: \n",
            "Model Number: 61 of 127 with model UnivariateMotif for Validation 3\n",
            "61 - UnivariateMotif with avg smape 3.52: \n",
            "Model Number: 62 of 127 with model ETS for Validation 3\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "62 - ETS with avg smape 2.53: \n",
            "Model Number: 63 of 127 with model ETS for Validation 3\n",
            "ETS error TypeError(\"__init__() got an unexpected keyword argument 'damped_trend'\")\n",
            "63 - ETS with avg smape 2.37: \n",
            "Model Number: 64 of 127 with model UnobservedComponents for Validation 3\n",
            "64 - UnobservedComponents with avg smape 3.38: \n",
            "Model Number: 65 of 127 with model AverageValueNaive for Validation 3\n",
            "65 - AverageValueNaive with avg smape 4.23: \n",
            "Model Number: 66 of 127 with model AverageValueNaive for Validation 3\n",
            "66 - AverageValueNaive with avg smape 2.44: \n",
            "Model Number: 67 of 127 with model SeasonalNaive for Validation 3\n",
            "67 - SeasonalNaive with avg smape 2.74: \n",
            "Model Number: 68 of 127 with model MultivariateMotif for Validation 3\n",
            "68 - MultivariateMotif with avg smape 2.02: \n",
            "Model Number: 69 of 127 with model SeasonalNaive for Validation 3\n",
            "69 - SeasonalNaive with avg smape 2.65: \n",
            "Model Number: 70 of 127 with model SeasonalNaive for Validation 3\n",
            "70 - SeasonalNaive with avg smape 2.67: \n",
            "Model Number: 71 of 127 with model SeasonalNaive for Validation 3\n",
            "71 - SeasonalNaive with avg smape 1.34: \n",
            "Model Number: 72 of 127 with model UnobservedComponents for Validation 3\n",
            "72 - UnobservedComponents with avg smape 5.87: \n",
            "Model Number: 73 of 127 with model SeasonalNaive for Validation 3\n",
            "73 - SeasonalNaive with avg smape 1.91: \n",
            "Model Number: 74 of 127 with model AverageValueNaive for Validation 3\n",
            "74 - AverageValueNaive with avg smape 2.54: \n",
            "Model Number: 75 of 127 with model MultivariateMotif for Validation 3\n",
            "75 - MultivariateMotif with avg smape 2.91: \n",
            "Model Number: 76 of 127 with model AverageValueNaive for Validation 3\n",
            "76 - AverageValueNaive with avg smape 2.53: \n",
            "Model Number: 77 of 127 with model GLS for Validation 3\n",
            "77 - GLS with avg smape 2.65: \n",
            "Model Number: 78 of 127 with model GLS for Validation 3\n",
            "78 - GLS with avg smape 2.65: \n",
            "Model Number: 79 of 127 with model AverageValueNaive for Validation 3\n",
            "79 - AverageValueNaive with avg smape 4.19: \n",
            "Model Number: 80 of 127 with model MultivariateRegression for Validation 3\n",
            "80 - MultivariateRegression with avg smape 2.5: \n",
            "Model Number: 81 of 127 with model DatepartRegression for Validation 3\n",
            "81 - DatepartRegression with avg smape 1.75: \n",
            "Model Number: 82 of 127 with model GLS for Validation 3\n",
            "82 - GLS with avg smape 2.42: \n",
            "Model Number: 83 of 127 with model GLS for Validation 3\n",
            "83 - GLS with avg smape 2.53: \n",
            "Model Number: 84 of 127 with model SeasonalNaive for Validation 3\n",
            "84 - SeasonalNaive with avg smape 1.23: \n",
            "Model Number: 85 of 127 with model SectionalMotif for Validation 3\n",
            "85 - SectionalMotif with avg smape 2.52: \n",
            "Model Number: 86 of 127 with model ConstantNaive for Validation 3\n",
            "86 - ConstantNaive with avg smape 2.4: \n",
            "Model Number: 87 of 127 with model GLS for Validation 3\n",
            "87 - GLS with avg smape 2.54: \n",
            "Model Number: 88 of 127 with model MultivariateRegression for Validation 3\n",
            "88 - MultivariateRegression with avg smape 4.64: \n",
            "Model Number: 89 of 127 with model UnivariateMotif for Validation 3\n",
            "89 - UnivariateMotif with avg smape 1.94: \n",
            "Model Number: 90 of 127 with model MultivariateRegression for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 200 out of 200 | elapsed:    0.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 200 out of 200 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "90 - MultivariateRegression with avg smape 2.19: \n",
            "Model Number: 91 of 127 with model UnivariateMotif for Validation 3\n",
            "91 - UnivariateMotif with avg smape 1.79: \n",
            "Model Number: 92 of 127 with model UnivariateMotif for Validation 3\n",
            "92 - UnivariateMotif with avg smape 2.6: \n",
            "Model Number: 93 of 127 with model DatepartRegression for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "93 - DatepartRegression with avg smape 4.05: \n",
            "Model Number: 94 of 127 with model GLS for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Done 1000 out of 1000 | elapsed:    1.3s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 1000 out of 1000 | elapsed:    0.1s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "94 - GLS with avg smape 2.21: \n",
            "Model Number: 95 of 127 with model DatepartRegression for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[Parallel(n_jobs=-2)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=-2)]: Done 100 out of 100 | elapsed:    0.1s finished\n",
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:    0.0s finished\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "95 - DatepartRegression with avg smape 4.18: \n",
            "Model Number: 96 of 127 with model DatepartRegression for Validation 3\n",
            "96 - DatepartRegression with avg smape 18.72: \n",
            "Model Number: 97 of 127 with model MultivariateMotif for Validation 3\n",
            "97 - MultivariateMotif with avg smape 2.68: \n",
            "Model Number: 98 of 127 with model GLS for Validation 3\n",
            "98 - GLS with avg smape 2.54: \n",
            "Model Number: 99 of 127 with model SectionalMotif for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
            "  ConvergenceWarning,\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "99 - SectionalMotif with avg smape 6.68: \n",
            "Model Number: 100 of 127 with model ConstantNaive for Validation 3\n",
            "100 - ConstantNaive with avg smape 2.37: \n",
            "Model Number: 101 of 127 with model SeasonalNaive for Validation 3\n",
            "101 - SeasonalNaive with avg smape 3.16: \n",
            "Model Number: 102 of 127 with model MultivariateMotif for Validation 3\n",
            "102 - MultivariateMotif with avg smape 1.49: \n",
            "Model Number: 103 of 127 with model UnivariateMotif for Validation 3\n",
            "103 - UnivariateMotif with avg smape 3.51: \n",
            "Model Number: 104 of 127 with model SeasonalNaive for Validation 3\n",
            "104 - SeasonalNaive with avg smape 2.19: \n",
            "Model Number: 105 of 127 with model SectionalMotif for Validation 3\n",
            "105 - SectionalMotif with avg smape 3.82: \n",
            "Model Number: 106 of 127 with model FBProphet for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 24.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "106 - FBProphet with avg smape 6.29: \n",
            "Model Number: 107 of 127 with model ConstantNaive for Validation 3\n",
            "107 - ConstantNaive with avg smape 2.84: \n",
            "Model Number: 108 of 127 with model MultivariateMotif for Validation 3\n",
            "108 - MultivariateMotif with avg smape 1.48: \n",
            "Model Number: 109 of 127 with model FBProphet for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 24.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "109 - FBProphet with avg smape 6.23: \n",
            "Model Number: 110 of 127 with model FBProphet for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 24.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "110 - FBProphet with avg smape 8.03: \n",
            "Model Number: 111 of 127 with model FBProphet for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 24.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "111 - FBProphet with avg smape 3.57: \n",
            "Model Number: 112 of 127 with model FBProphet for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 24.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "112 - FBProphet with avg smape 3.45: \n",
            "Model Number: 113 of 127 with model FBProphet for Validation 3\n",
            "113 - FBProphet with avg smape 3.57: \n",
            "Model Number: 114 of 127 with model UnivariateMotif for Validation 3\n",
            "114 - UnivariateMotif with avg smape 2.1: \n",
            "Model Number: 115 of 127 with model MultivariateMotif for Validation 3\n",
            "115 - MultivariateMotif with avg smape 2.19: \n",
            "Model Number: 116 of 127 with model SectionalMotif for Validation 3\n",
            "116 - SectionalMotif with avg smape 2.46: \n",
            "Model Number: 117 of 127 with model FBProphet for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "INFO:fbprophet:n_changepoints greater than number of observations. Using 24.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "117 - FBProphet with avg smape 6.33: \n",
            "Model Number: 118 of 127 with model MultivariateMotif for Validation 3\n",
            "118 - MultivariateMotif with avg smape 2.36: \n",
            "Model Number: 119 of 127 with model MultivariateMotif for Validation 3\n",
            "119 - MultivariateMotif with avg smape 2.63: \n",
            "Model Number: 120 of 127 with model GLS for Validation 3\n",
            "120 - GLS with avg smape 5.03: \n",
            "Model Number: 121 of 127 with model FBProphet for Validation 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "121 - FBProphet with avg smape 2.76: \n",
            "Model Number: 122 of 127 with model DatepartRegression for Validation 3\n",
            "122 - DatepartRegression with avg smape 4.42: \n",
            "Model Number: 123 of 127 with model ConstantNaive for Validation 3\n",
            "123 - ConstantNaive with avg smape 18.72: \n",
            "Model Number: 124 of 127 with model ConstantNaive for Validation 3\n",
            "124 - ConstantNaive with avg smape 18.72: \n",
            "Model Number: 125 of 127 with model ConstantNaive for Validation 3\n",
            "125 - ConstantNaive with avg smape 18.72: \n",
            "Model Number: 126 of 127 with model ConstantNaive for Validation 3\n",
            "126 - ConstantNaive with avg smape 17.82: \n",
            "Model Number: 127 of 127 with model GLM for Validation 3\n",
            "127 - GLM with avg smape 9.14: \n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Initiated AutoTS object with best model: \n",
              "SeasonalNaive\n",
              "{'fillna': 'rolling_mean_24', 'transformations': {'0': 'SinTrend', '1': 'Round', '2': 'PowerTransformer'}, 'transformation_params': {'0': {}, '1': {'model': 'middle', 'decimals': 2, 'on_transform': False, 'on_inverse': True}, '2': {}}}\n",
              "{'method': 'lastvalue', 'lag_1': 2, 'lag_2': 7}\n",
              "SMAPE: 3.7046552650167075, 6.0382072347693505, 2.866516685902586, 2.1920493938764967\n",
              "MAE: 5.326477348671407, 9.20503313626045, 4.641356879678296, 3.7174720881076238\n",
              "SPL: 0.8832591787027694, 1.4789101960029978, 0.9088118464500407, 1.0922716077932517"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prediction = model.predict()\n",
        "forecast = prediction.forecast\n",
        "print(\"Stock Price Prediction of Apple\")\n",
        "print(forecast)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZIyc7g4oO3xp",
        "outputId": "dbeb6994-9005-42a1-975c-3e9ce0a80cb2"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Stock Price Prediction of Apple\n",
            "                 Close\n",
            "2022-06-02  143.664274\n",
            "2022-06-03  143.707545\n",
            "2022-06-06  145.013526\n",
            "2022-06-07  147.921133\n",
            "2022-06-08  148.154984\n",
            "2022-06-09  147.645137\n",
            "2022-06-10  147.541647\n",
            "2022-06-13  142.399820\n",
            "2022-06-14  142.482243\n",
            "2022-06-15  144.151248\n"
          ]
        }
      ]
    }
  ]
}
